// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: store.proto

package store

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	base "locgame-mini-server/pkg/dto/base"
	cards "locgame-mini-server/pkg/dto/cards"
	resources "locgame-mini-server/pkg/dto/resources"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DiscountType int32

const (
	DiscountType_Percentage DiscountType = 0
	DiscountType_Fixed      DiscountType = 1
)

// Enum value maps for DiscountType.
var (
	DiscountType_name = map[int32]string{
		0: "Percentage",
		1: "Fixed",
	}
	DiscountType_value = map[string]int32{
		"Percentage": 0,
		"Fixed":      1,
	}
)

func (x DiscountType) Enum() *DiscountType {
	p := new(DiscountType)
	*p = x
	return p
}

func (x DiscountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiscountType) Descriptor() protoreflect.EnumDescriptor {
	return file_store_proto_enumTypes[0].Descriptor()
}

func (DiscountType) Type() protoreflect.EnumType {
	return &file_store_proto_enumTypes[0]
}

func (x DiscountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiscountType.Descriptor instead.
func (DiscountType) EnumDescriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{0}
}

type ProductType int32

const (
	ProductType_PackOfCards  ProductType = 0
	ProductType_PackOfCoins  ProductType = 1
	ProductType_SpecialOffer ProductType = 2
	ProductType_CardUpgrade  ProductType = 3
	ProductType_VToken       ProductType = 4
)

// Enum value maps for ProductType.
var (
	ProductType_name = map[int32]string{
		0: "PackOfCards",
		1: "PackOfCoins",
		2: "SpecialOffer",
		3: "CardUpgrade",
		4: "VToken",
	}
	ProductType_value = map[string]int32{
		"PackOfCards":  0,
		"PackOfCoins":  1,
		"SpecialOffer": 2,
		"CardUpgrade":  3,
		"VToken":       4,
	}
)

func (x ProductType) Enum() *ProductType {
	p := new(ProductType)
	*p = x
	return p
}

func (x ProductType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProductType) Descriptor() protoreflect.EnumDescriptor {
	return file_store_proto_enumTypes[1].Descriptor()
}

func (ProductType) Type() protoreflect.EnumType {
	return &file_store_proto_enumTypes[1]
}

func (x ProductType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProductType.Descriptor instead.
func (ProductType) EnumDescriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{1}
}

type PaymentMethod int32

const (
	PaymentMethod_USDC     PaymentMethod = 0
	PaymentMethod_LC       PaymentMethod = 1
	PaymentMethod_LOCG     PaymentMethod = 2
	PaymentMethod_LOCGBase PaymentMethod = 3
	PaymentMethod_ETH      PaymentMethod = 4
	PaymentMethod_PayPal   PaymentMethod = 5
	PaymentMethod_ByAdmin  PaymentMethod = 6
	PaymentMethod_USDCBase PaymentMethod = 7
	PaymentMethod_USDT     PaymentMethod = 8
	PaymentMethod_ETHBase  PaymentMethod = 9
)

// Enum value maps for PaymentMethod.
var (
	PaymentMethod_name = map[int32]string{
		0: "USDC",
		1: "LC",
		2: "LOCG",
		3: "LOCGBase",
		4: "ETH",
		5: "PayPal",
		6: "ByAdmin",
		7: "USDCBase",
		8: "USDT",
		9: "ETHBase",
	}
	PaymentMethod_value = map[string]int32{
		"USDC":     0,
		"LC":       1,
		"LOCG":     2,
		"LOCGBase": 3,
		"ETH":      4,
		"PayPal":   5,
		"ByAdmin":  6,
		"USDCBase": 7,
		"USDT":     8,
		"ETHBase":  9,
	}
)

func (x PaymentMethod) Enum() *PaymentMethod {
	p := new(PaymentMethod)
	*p = x
	return p
}

func (x PaymentMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_store_proto_enumTypes[2].Descriptor()
}

func (PaymentMethod) Type() protoreflect.EnumType {
	return &file_store_proto_enumTypes[2]
}

func (x PaymentMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentMethod.Descriptor instead.
func (PaymentMethod) EnumDescriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{2}
}

type OrderStatus int32

const (
	OrderStatus_Unknown           OrderStatus = 0
	OrderStatus_Canceled          OrderStatus = 1
	OrderStatus_WaitingForPayment OrderStatus = 2
	OrderStatus_PaymentReceived   OrderStatus = 3
	OrderStatus_Failed            OrderStatus = 4
	OrderStatus_InProgress        OrderStatus = 5
	OrderStatus_Completed         OrderStatus = 6
	OrderStatus_Opened            OrderStatus = 7
)

// Enum value maps for OrderStatus.
var (
	OrderStatus_name = map[int32]string{
		0: "Unknown",
		1: "Canceled",
		2: "WaitingForPayment",
		3: "PaymentReceived",
		4: "Failed",
		5: "InProgress",
		6: "Completed",
		7: "Opened",
	}
	OrderStatus_value = map[string]int32{
		"Unknown":           0,
		"Canceled":          1,
		"WaitingForPayment": 2,
		"PaymentReceived":   3,
		"Failed":            4,
		"InProgress":        5,
		"Completed":         6,
		"Opened":            7,
	}
)

func (x OrderStatus) Enum() *OrderStatus {
	p := new(OrderStatus)
	*p = x
	return p
}

func (x OrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_store_proto_enumTypes[3].Descriptor()
}

func (OrderStatus) Type() protoreflect.EnumType {
	return &file_store_proto_enumTypes[3]
}

func (x OrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderStatus.Descriptor instead.
func (OrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{3}
}

type TokenStatus int32

const (
	TokenStatus_TokenWaitingForMint TokenStatus = 0
	TokenStatus_TokenSuccess        TokenStatus = 1
	TokenStatus_TokenFailed         TokenStatus = 2
	TokenStatus_TokenError          TokenStatus = 3
)

// Enum value maps for TokenStatus.
var (
	TokenStatus_name = map[int32]string{
		0: "TokenWaitingForMint",
		1: "TokenSuccess",
		2: "TokenFailed",
		3: "TokenError",
	}
	TokenStatus_value = map[string]int32{
		"TokenWaitingForMint": 0,
		"TokenSuccess":        1,
		"TokenFailed":         2,
		"TokenError":          3,
	}
)

func (x TokenStatus) Enum() *TokenStatus {
	p := new(TokenStatus)
	*p = x
	return p
}

func (x TokenStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TokenStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_store_proto_enumTypes[4].Descriptor()
}

func (TokenStatus) Type() protoreflect.EnumType {
	return &file_store_proto_enumTypes[4]
}

func (x TokenStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TokenStatus.Descriptor instead.
func (TokenStatus) EnumDescriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{4}
}

type MintType int32

const (
	MintType_MintOrder   MintType = 0
	MintType_MintGift    MintType = 1
	MintType_MintUpgrade MintType = 2
)

// Enum value maps for MintType.
var (
	MintType_name = map[int32]string{
		0: "MintOrder",
		1: "MintGift",
		2: "MintUpgrade",
	}
	MintType_value = map[string]int32{
		"MintOrder":   0,
		"MintGift":    1,
		"MintUpgrade": 2,
	}
)

func (x MintType) Enum() *MintType {
	p := new(MintType)
	*p = x
	return p
}

func (x MintType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MintType) Descriptor() protoreflect.EnumDescriptor {
	return file_store_proto_enumTypes[5].Descriptor()
}

func (MintType) Type() protoreflect.EnumType {
	return &file_store_proto_enumTypes[5]
}

func (x MintType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MintType.Descriptor instead.
func (MintType) EnumDescriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{5}
}

type BigInt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty" yaml:"Value,omitempty" bson:"value,omitempty"`
}

func (x *BigInt) Reset() {
	*x = BigInt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BigInt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BigInt) ProtoMessage() {}

func (x *BigInt) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BigInt.ProtoReflect.Descriptor instead.
func (*BigInt) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{0}
}

func (x *BigInt) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type PlayerStoreData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PurchasedProducts map[string]int32 `protobuf:"bytes,1,rep,name=PurchasedProducts,proto3" json:"PurchasedProducts,omitempty" yaml:"PurchasedProducts,omitempty" bson:"purchased_products,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	LastWithdrawalAt  *base.Timestamp  `protobuf:"bytes,2,opt,name=LastWithdrawalAt,proto3" json:"LastWithdrawalAt,omitempty" yaml:"LastWithdrawalAt,omitempty" bson:"last_withdrawal_at,omitempty"`
}

func (x *PlayerStoreData) Reset() {
	*x = PlayerStoreData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerStoreData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStoreData) ProtoMessage() {}

func (x *PlayerStoreData) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStoreData.ProtoReflect.Descriptor instead.
func (*PlayerStoreData) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{1}
}

func (x *PlayerStoreData) GetPurchasedProducts() map[string]int32 {
	if x != nil {
		return x.PurchasedProducts
	}
	return nil
}

func (x *PlayerStoreData) GetLastWithdrawalAt() *base.Timestamp {
	if x != nil {
		return x.LastWithdrawalAt
	}
	return nil
}

type Discount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       *base.ObjectID    `protobuf:"bytes,6,opt,name=ID,proto3" json:"ID,omitempty" yaml:"ID,omitempty" bson:"_id,omitempty"`
	Active   bool              `protobuf:"varint,1,opt,name=Active,proto3" json:"Active,omitempty" yaml:"Active,omitempty" bson:"active"`
	Product  string            `protobuf:"bytes,2,opt,name=Product,proto3" json:"Product,omitempty" yaml:"Product,omitempty" bson:"product,omitempty"`
	Type     DiscountType      `protobuf:"varint,3,opt,name=Type,proto3,enum=store.DiscountType" json:"Type,omitempty" yaml:"Type,omitempty" bson:"type,omitempty"`
	Value    float32           `protobuf:"fixed32,4,opt,name=Value,proto3" json:"Value,omitempty" yaml:"Value,omitempty" bson:"value,omitempty"`
	Duration *DiscountDuration `protobuf:"bytes,5,opt,name=Duration,proto3" json:"Duration,omitempty" yaml:"Duration,omitempty" bson:"duration,omitempty"`
}

func (x *Discount) Reset() {
	*x = Discount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Discount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Discount) ProtoMessage() {}

func (x *Discount) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Discount.ProtoReflect.Descriptor instead.
func (*Discount) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{2}
}

func (x *Discount) GetID() *base.ObjectID {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Discount) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Discount) GetProduct() string {
	if x != nil {
		return x.Product
	}
	return ""
}

func (x *Discount) GetType() DiscountType {
	if x != nil {
		return x.Type
	}
	return DiscountType_Percentage
}

func (x *Discount) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Discount) GetDuration() *DiscountDuration {
	if x != nil {
		return x.Duration
	}
	return nil
}

type DiscountDuration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime *base.Timestamp `protobuf:"bytes,2,opt,name=StartTime,proto3" json:"StartTime,omitempty" yaml:"StartTime,omitempty" bson:"start_time,omitempty"`
	EndTime   *base.Timestamp `protobuf:"bytes,3,opt,name=EndTime,proto3" json:"EndTime,omitempty" yaml:"EndTime,omitempty" bson:"end_time,omitempty"`
}

func (x *DiscountDuration) Reset() {
	*x = DiscountDuration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscountDuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscountDuration) ProtoMessage() {}

func (x *DiscountDuration) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscountDuration.ProtoReflect.Descriptor instead.
func (*DiscountDuration) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{3}
}

func (x *DiscountDuration) GetStartTime() *base.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *DiscountDuration) GetEndTime() *base.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type StoreData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpecialOffers   []*Pack              `protobuf:"bytes,1,rep,name=SpecialOffers,proto3" json:"SpecialOffers,omitempty" yaml:"SpecialOffers,omitempty" bson:"special_offers,omitempty"`
	Packs           []*Pack              `protobuf:"bytes,2,rep,name=Packs,proto3" json:"Packs,omitempty" yaml:"Packs,omitempty" bson:"packs,omitempty"`
	Coins           []*CoinsPack         `protobuf:"bytes,3,rep,name=Coins,proto3" json:"Coins,omitempty" yaml:"Coins,omitempty" bson:"coins,omitempty"`
	LoCGConvertRate *LoCGConvertRate     `protobuf:"bytes,4,opt,name=LoCGConvertRate,proto3" json:"LoCGConvertRate,omitempty" yaml:"LoCGConvertRate,omitempty" bson:"lo_cg_convert_rate,omitempty"`
	Discounts       map[string]*Discount `protobuf:"bytes,5,rep,name=Discounts,proto3" json:"Discounts,omitempty" yaml:"Discounts,omitempty" bson:"discounts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Upgrades        map[string]*Upgrades `protobuf:"bytes,6,rep,name=Upgrades,proto3" json:"Upgrades,omitempty" yaml:"Upgrades,omitempty" bson:"upgrades,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tokens          []*Token             `protobuf:"bytes,7,rep,name=Tokens,proto3" json:"Tokens,omitempty" yaml:"Tokens,omitempty" bson:"tokens,omitempty"`
	EthConvertRate  *EthConvertRate      `protobuf:"bytes,8,opt,name=EthConvertRate,proto3" json:"EthConvertRate,omitempty" yaml:"EthConvertRate,omitempty" bson:"eth_convert_rate,omitempty"`
}

func (x *StoreData) Reset() {
	*x = StoreData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreData) ProtoMessage() {}

func (x *StoreData) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreData.ProtoReflect.Descriptor instead.
func (*StoreData) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{4}
}

func (x *StoreData) GetSpecialOffers() []*Pack {
	if x != nil {
		return x.SpecialOffers
	}
	return nil
}

func (x *StoreData) GetPacks() []*Pack {
	if x != nil {
		return x.Packs
	}
	return nil
}

func (x *StoreData) GetCoins() []*CoinsPack {
	if x != nil {
		return x.Coins
	}
	return nil
}

func (x *StoreData) GetLoCGConvertRate() *LoCGConvertRate {
	if x != nil {
		return x.LoCGConvertRate
	}
	return nil
}

func (x *StoreData) GetDiscounts() map[string]*Discount {
	if x != nil {
		return x.Discounts
	}
	return nil
}

func (x *StoreData) GetUpgrades() map[string]*Upgrades {
	if x != nil {
		return x.Upgrades
	}
	return nil
}

func (x *StoreData) GetTokens() []*Token {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *StoreData) GetEthConvertRate() *EthConvertRate {
	if x != nil {
		return x.EthConvertRate
	}
	return nil
}

type LoCGConvertRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextUpdateTime *base.Timestamp `protobuf:"bytes,1,opt,name=NextUpdateTime,proto3" json:"NextUpdateTime,omitempty" yaml:"NextUpdateTime,omitempty" bson:"next_update_time,omitempty"`
	Price          float64         `protobuf:"fixed64,2,opt,name=Price,proto3" json:"Price,omitempty" yaml:"Price,omitempty" bson:"price,omitempty"`
}

func (x *LoCGConvertRate) Reset() {
	*x = LoCGConvertRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoCGConvertRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoCGConvertRate) ProtoMessage() {}

func (x *LoCGConvertRate) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoCGConvertRate.ProtoReflect.Descriptor instead.
func (*LoCGConvertRate) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{5}
}

func (x *LoCGConvertRate) GetNextUpdateTime() *base.Timestamp {
	if x != nil {
		return x.NextUpdateTime
	}
	return nil
}

func (x *LoCGConvertRate) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type EthConvertRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextUpdateTime *base.Timestamp `protobuf:"bytes,1,opt,name=NextUpdateTime,proto3" json:"NextUpdateTime,omitempty" yaml:"NextUpdateTime,omitempty" bson:"next_update_time,omitempty"`
	Price          float64         `protobuf:"fixed64,2,opt,name=Price,proto3" json:"Price,omitempty" yaml:"Price,omitempty" bson:"price,omitempty"`
}

func (x *EthConvertRate) Reset() {
	*x = EthConvertRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthConvertRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthConvertRate) ProtoMessage() {}

func (x *EthConvertRate) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthConvertRate.ProtoReflect.Descriptor instead.
func (*EthConvertRate) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{6}
}

func (x *EthConvertRate) GetNextUpdateTime() *base.Timestamp {
	if x != nil {
		return x.NextUpdateTime
	}
	return nil
}

func (x *EthConvertRate) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type CoinsPack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         string  `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty" yaml:"ID,omitempty" bson:"_id,omitempty"`
	Count      int32   `protobuf:"varint,6,opt,name=Count,proto3" json:"Count,omitempty" yaml:"Count,omitempty" bson:"count,omitempty"`
	ProductID  string  `protobuf:"bytes,8,opt,name=ProductID,proto3" json:"ProductID,omitempty" yaml:"ProductID,omitempty" bson:"product_id,omitempty"`
	PriceInUSD float32 `protobuf:"fixed32,9,opt,name=PriceInUSD,proto3" json:"PriceInUSD,omitempty" yaml:"PriceInUSD,omitempty" bson:"price_in_usd,omitempty"`
}

func (x *CoinsPack) Reset() {
	*x = CoinsPack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinsPack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinsPack) ProtoMessage() {}

func (x *CoinsPack) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinsPack.ProtoReflect.Descriptor instead.
func (*CoinsPack) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{7}
}

func (x *CoinsPack) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *CoinsPack) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CoinsPack) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *CoinsPack) GetPriceInUSD() float32 {
	if x != nil {
		return x.PriceInUSD
	}
	return 0
}

// TokenPack is for future token purchase implementation
// Only available limited time
type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                          string            `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty" yaml:"ID,omitempty" bson:"id,omitempty"`
	TokenID                     string            `protobuf:"bytes,2,opt,name=TokenID,proto3" json:"TokenID,omitempty" yaml:"TokenID,omitempty" bson:"token_id,omitempty"`
	Name                        string            `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty" yaml:"Name,omitempty" bson:"name,omitempty"`
	Available                   bool              `protobuf:"varint,4,opt,name=Available,proto3" json:"Available,omitempty" yaml:"Available,omitempty" bson:"available"`
	MaxSupply                   int64             `protobuf:"varint,5,opt,name=MaxSupply,proto3" json:"MaxSupply,omitempty" yaml:"MaxSupply,omitempty" bson:"max_supply,omitempty"`
	QtyPerUnit                  int32             `protobuf:"varint,6,opt,name=QtyPerUnit,proto3" json:"QtyPerUnit,omitempty" yaml:"QtyPerUnit,omitempty" bson:"qty_per_unit,omitempty"`
	SaleStart                   int64             `protobuf:"varint,7,opt,name=SaleStart,proto3" json:"SaleStart,omitempty" yaml:"SaleStart,omitempty" bson:"sale_start,omitempty"` // Unix timestamp
	SaleEnd                     int64             `protobuf:"varint,8,opt,name=SaleEnd,proto3" json:"SaleEnd,omitempty" yaml:"SaleEnd,omitempty" bson:"sale_end,omitempty"`     // Unix timestamp
	ProductID                   string            `protobuf:"bytes,9,opt,name=ProductID,proto3" json:"ProductID,omitempty" yaml:"ProductID,omitempty" bson:"product_id,omitempty"`
	PriceInUSD                  float32           `protobuf:"fixed32,10,opt,name=PriceInUSD,proto3" json:"PriceInUSD,omitempty" yaml:"PriceInUSD,omitempty" bson:"price_in_usd,omitempty"`
	LOCGBonus                   float32           `protobuf:"fixed32,11,opt,name=LOCGBonus,proto3" json:"LOCGBonus,omitempty" yaml:"LOCGBonus,omitempty" bson:"locg_bonus,omitempty"`
	MaxPurchase                 int64             `protobuf:"varint,12,opt,name=MaxPurchase,proto3" json:"MaxPurchase,omitempty" yaml:"MaxPurchase,omitempty" bson:"max_purchase,omitempty"`
	MinPurchase                 int32             `protobuf:"varint,13,opt,name=MinPurchase,proto3" json:"MinPurchase,omitempty" yaml:"MinPurchase,omitempty" bson:"min_purchase,omitempty"`
	Remaining                   int64             `protobuf:"varint,14,opt,name=Remaining,proto3" json:"Remaining,omitempty" yaml:"Remaining,omitempty" bson:"remaining,omitempty"`
	AdditionalAccountedQuantity int64             `protobuf:"varint,15,opt,name=AdditionalAccountedQuantity,proto3" json:"AdditionalAccountedQuantity,omitempty" yaml:"AdditionalAccountedQuantity,omitempty" bson:"additional_accounted_quantity,omitempty"`
	Offers                      []*TokenOffer     `protobuf:"bytes,16,rep,name=Offers,proto3" json:"Offers,omitempty" yaml:"Offers,omitempty" bson:"offers,omitempty"`
	PromoCodes                  []*TokenPromoCode `protobuf:"bytes,17,rep,name=PromoCodes,proto3" json:"PromoCodes,omitempty" yaml:"PromoCodes,omitempty" bson:"promo_codes,omitempty"`
}

func (x *Token) Reset() {
	*x = Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{8}
}

func (x *Token) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Token) GetTokenID() string {
	if x != nil {
		return x.TokenID
	}
	return ""
}

func (x *Token) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Token) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *Token) GetMaxSupply() int64 {
	if x != nil {
		return x.MaxSupply
	}
	return 0
}

func (x *Token) GetQtyPerUnit() int32 {
	if x != nil {
		return x.QtyPerUnit
	}
	return 0
}

func (x *Token) GetSaleStart() int64 {
	if x != nil {
		return x.SaleStart
	}
	return 0
}

func (x *Token) GetSaleEnd() int64 {
	if x != nil {
		return x.SaleEnd
	}
	return 0
}

func (x *Token) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *Token) GetPriceInUSD() float32 {
	if x != nil {
		return x.PriceInUSD
	}
	return 0
}

func (x *Token) GetLOCGBonus() float32 {
	if x != nil {
		return x.LOCGBonus
	}
	return 0
}

func (x *Token) GetMaxPurchase() int64 {
	if x != nil {
		return x.MaxPurchase
	}
	return 0
}

func (x *Token) GetMinPurchase() int32 {
	if x != nil {
		return x.MinPurchase
	}
	return 0
}

func (x *Token) GetRemaining() int64 {
	if x != nil {
		return x.Remaining
	}
	return 0
}

func (x *Token) GetAdditionalAccountedQuantity() int64 {
	if x != nil {
		return x.AdditionalAccountedQuantity
	}
	return 0
}

func (x *Token) GetOffers() []*TokenOffer {
	if x != nil {
		return x.Offers
	}
	return nil
}

func (x *Token) GetPromoCodes() []*TokenPromoCode {
	if x != nil {
		return x.PromoCodes
	}
	return nil
}

type TokenOffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                string  `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty" yaml:"ID,omitempty" bson:"id,omitempty"`
	SaleStart         int64   `protobuf:"varint,2,opt,name=SaleStart,proto3" json:"SaleStart,omitempty" yaml:"SaleStart,omitempty" bson:"sale_start,omitempty"` // Unix timestamp
	SaleEnd           int64   `protobuf:"varint,3,opt,name=SaleEnd,proto3" json:"SaleEnd,omitempty" yaml:"SaleEnd,omitempty" bson:"sale_end,omitempty"`     // Unix timestamp
	LOCGBonusOverride float32 `protobuf:"fixed32,4,opt,name=LOCGBonusOverride,proto3" json:"LOCGBonusOverride,omitempty" yaml:"LOCGBonusOverride,omitempty" bson:"locg_bonus_override,omitempty"`
}

func (x *TokenOffer) Reset() {
	*x = TokenOffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenOffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenOffer) ProtoMessage() {}

func (x *TokenOffer) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenOffer.ProtoReflect.Descriptor instead.
func (*TokenOffer) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{9}
}

func (x *TokenOffer) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *TokenOffer) GetSaleStart() int64 {
	if x != nil {
		return x.SaleStart
	}
	return 0
}

func (x *TokenOffer) GetSaleEnd() int64 {
	if x != nil {
		return x.SaleEnd
	}
	return 0
}

func (x *TokenOffer) GetLOCGBonusOverride() float32 {
	if x != nil {
		return x.LOCGBonusOverride
	}
	return 0
}

type TokenPromoCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                    string  `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty" yaml:"ID,omitempty" bson:"id,omitempty"`
	Active                bool    `protobuf:"varint,2,opt,name=Active,proto3" json:"Active,omitempty" yaml:"Active,omitempty" bson:"active"`
	Bonus                 float32 `protobuf:"fixed32,3,opt,name=Bonus,proto3" json:"Bonus,omitempty" yaml:"Bonus,omitempty" bson:"bonus,omitempty"`
	ReferralBonus         float32 `protobuf:"fixed32,5,opt,name=ReferralBonus,proto3" json:"ReferralBonus,omitempty" yaml:"ReferralBonus,omitempty" bson:"referral_bonus,omitempty"`
	ReferrerPayout        float32 `protobuf:"fixed32,6,opt,name=ReferrerPayout,proto3" json:"ReferrerPayout,omitempty" yaml:"ReferrerPayout,omitempty" bson:"referrer_payout,omitempty"`
	PaymentMethodsInclude []int32 `protobuf:"varint,7,rep,packed,name=PaymentMethodsInclude,proto3" json:"PaymentMethodsInclude,omitempty" yaml:"PaymentMethodsInclude,omitempty" bson:"payment_methods_include,omitempty"`
	PaymentMethodsExcept  []int32 `protobuf:"varint,8,rep,packed,name=PaymentMethodsExcept,proto3" json:"PaymentMethodsExcept,omitempty" yaml:"PaymentMethodsExcept,omitempty" bson:"payment_methods_except,omitempty"`
}

func (x *TokenPromoCode) Reset() {
	*x = TokenPromoCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenPromoCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenPromoCode) ProtoMessage() {}

func (x *TokenPromoCode) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenPromoCode.ProtoReflect.Descriptor instead.
func (*TokenPromoCode) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{10}
}

func (x *TokenPromoCode) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *TokenPromoCode) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *TokenPromoCode) GetBonus() float32 {
	if x != nil {
		return x.Bonus
	}
	return 0
}

func (x *TokenPromoCode) GetReferralBonus() float32 {
	if x != nil {
		return x.ReferralBonus
	}
	return 0
}

func (x *TokenPromoCode) GetReferrerPayout() float32 {
	if x != nil {
		return x.ReferrerPayout
	}
	return 0
}

func (x *TokenPromoCode) GetPaymentMethodsInclude() []int32 {
	if x != nil {
		return x.PaymentMethodsInclude
	}
	return nil
}

func (x *TokenPromoCode) GetPaymentMethodsExcept() []int32 {
	if x != nil {
		return x.PaymentMethodsExcept
	}
	return nil
}

type Pack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              string      `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty" yaml:"ID,omitempty" bson:"id,omitempty"`
	Title           string      `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty" yaml:"Title,omitempty" bson:"title,omitempty"`
	Description     string      `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty" yaml:"Description,omitempty" bson:"description,omitempty"`
	DescriptionLong string      `protobuf:"bytes,4,opt,name=DescriptionLong,proto3" json:"DescriptionLong,omitempty" yaml:"DescriptionLong,omitempty" bson:"description_long,omitempty"`
	Image           string      `protobuf:"bytes,5,opt,name=Image,proto3" json:"Image,omitempty" yaml:"Image,omitempty" bson:"image,omitempty"`
	Items           []*PackItem `protobuf:"bytes,6,rep,name=Items,proto3" json:"Items,omitempty" yaml:"Items,omitempty" bson:"items,omitempty"`
	MaxPurchase     int32       `protobuf:"varint,7,opt,name=MaxPurchase,proto3" json:"MaxPurchase,omitempty" yaml:"MaxPurchase,omitempty" bson:"max_purchase,omitempty"`
	ProductID       string      `protobuf:"bytes,8,opt,name=ProductID,proto3" json:"ProductID,omitempty" yaml:"ProductID,omitempty" bson:"product_id,omitempty"`
	PriceInUSD      float32     `protobuf:"fixed32,9,opt,name=PriceInUSD,proto3" json:"PriceInUSD,omitempty" yaml:"PriceInUSD,omitempty" bson:"price_in_usd,omitempty"`
	Available       bool        `protobuf:"varint,10,opt,name=Available,proto3" json:"Available,omitempty" yaml:"Available,omitempty" bson:"available"`
	PriceInLC       float32     `protobuf:"fixed32,11,opt,name=PriceInLC,proto3" json:"PriceInLC,omitempty" yaml:"PriceInLC,omitempty" bson:"price_in_lc,omitempty"`
}

func (x *Pack) Reset() {
	*x = Pack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pack) ProtoMessage() {}

func (x *Pack) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pack.ProtoReflect.Descriptor instead.
func (*Pack) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{11}
}

func (x *Pack) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Pack) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Pack) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Pack) GetDescriptionLong() string {
	if x != nil {
		return x.DescriptionLong
	}
	return ""
}

func (x *Pack) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Pack) GetItems() []*PackItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Pack) GetMaxPurchase() int32 {
	if x != nil {
		return x.MaxPurchase
	}
	return 0
}

func (x *Pack) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *Pack) GetPriceInUSD() float32 {
	if x != nil {
		return x.PriceInUSD
	}
	return 0
}

func (x *Pack) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *Pack) GetPriceInLC() float32 {
	if x != nil {
		return x.PriceInLC
	}
	return 0
}

type Upgrades struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options []*cards.Option `protobuf:"bytes,1,rep,name=Options,proto3" json:"Options,omitempty" yaml:"Options,omitempty" bson:"options,omitempty"`
}

func (x *Upgrades) Reset() {
	*x = Upgrades{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Upgrades) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Upgrades) ProtoMessage() {}

func (x *Upgrades) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Upgrades.ProtoReflect.Descriptor instead.
func (*Upgrades) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{12}
}

func (x *Upgrades) GetOptions() []*cards.Option {
	if x != nil {
		return x.Options
	}
	return nil
}

type RandomizedCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Set            int32             `protobuf:"varint,1,opt,name=Set,proto3" json:"Set,omitempty" yaml:"Set,omitempty" bson:"set,omitempty"`
	Pack           int32             `protobuf:"varint,2,opt,name=Pack,proto3" json:"Pack,omitempty" yaml:"Pack,omitempty" bson:"pack,omitempty"`
	GameRarities   map[int32]float32 `protobuf:"bytes,3,rep,name=GameRarities,proto3" json:"GameRarities,omitempty" yaml:"GameRarities,omitempty" bson:"game_rarities,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	VisualRarities map[int32]float32 `protobuf:"bytes,4,rep,name=VisualRarities,proto3" json:"VisualRarities,omitempty" yaml:"VisualRarities,omitempty" bson:"visual_rarities,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
}

func (x *RandomizedCard) Reset() {
	*x = RandomizedCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RandomizedCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RandomizedCard) ProtoMessage() {}

func (x *RandomizedCard) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RandomizedCard.ProtoReflect.Descriptor instead.
func (*RandomizedCard) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{13}
}

func (x *RandomizedCard) GetSet() int32 {
	if x != nil {
		return x.Set
	}
	return 0
}

func (x *RandomizedCard) GetPack() int32 {
	if x != nil {
		return x.Pack
	}
	return 0
}

func (x *RandomizedCard) GetGameRarities() map[int32]float32 {
	if x != nil {
		return x.GameRarities
	}
	return nil
}

func (x *RandomizedCard) GetVisualRarities() map[int32]float32 {
	if x != nil {
		return x.VisualRarities
	}
	return nil
}

type PackItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PredefinedCardID string          `protobuf:"bytes,1,opt,name=PredefinedCardID,proto3" json:"PredefinedCardID,omitempty" yaml:"PredefinedCardID,omitempty" bson:"predefined_card_id,omitempty"`
	RandomizedCard   *RandomizedCard `protobuf:"bytes,2,opt,name=RandomizedCard,proto3" json:"RandomizedCard,omitempty" yaml:"RandomizedCard,omitempty" bson:"randomized_card,omitempty"`
}

func (x *PackItem) Reset() {
	*x = PackItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackItem) ProtoMessage() {}

func (x *PackItem) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackItem.ProtoReflect.Descriptor instead.
func (*PackItem) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{14}
}

func (x *PackItem) GetPredefinedCardID() string {
	if x != nil {
		return x.PredefinedCardID
	}
	return ""
}

func (x *PackItem) GetRandomizedCard() *RandomizedCard {
	if x != nil {
		return x.RandomizedCard
	}
	return nil
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            *base.ObjectID  `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty" yaml:"ID,omitempty" bson:"_id,omitempty"`
	BuyerID       *base.ObjectID  `protobuf:"bytes,2,opt,name=BuyerID,proto3" json:"BuyerID,omitempty" yaml:"BuyerID,omitempty" bson:"buyer_id,omitempty"`
	Quantity      int64           `protobuf:"varint,3,opt,name=Quantity,proto3" json:"Quantity,omitempty" yaml:"Quantity,omitempty" bson:"quantity,omitempty"`
	ProductID     string          `protobuf:"bytes,4,opt,name=ProductID,proto3" json:"ProductID,omitempty" yaml:"ProductID,omitempty" bson:"product_id,omitempty"`
	ProductType   ProductType     `protobuf:"varint,5,opt,name=ProductType,proto3,enum=store.ProductType" json:"ProductType,omitempty" yaml:"ProductType,omitempty" bson:"product_type,omitempty"`
	PaymentMethod PaymentMethod   `protobuf:"varint,6,opt,name=PaymentMethod,proto3,enum=store.PaymentMethod" json:"PaymentMethod,omitempty" yaml:"PaymentMethod,omitempty" bson:"payment_method,omitempty"`
	Status        OrderStatus     `protobuf:"varint,7,opt,name=Status,proto3,enum=store.OrderStatus" json:"Status,omitempty" yaml:"Status,omitempty" bson:"status,omitempty"`
	Price         string          `protobuf:"bytes,8,opt,name=Price,proto3" json:"Price,omitempty" yaml:"Price,omitempty" bson:"price,omitempty"`
	CreatedAt     *base.Timestamp `protobuf:"bytes,9,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" yaml:"CreatedAt,omitempty" bson:"created_at,omitempty"`
	PaymentHash   string          `protobuf:"bytes,10,opt,name=PaymentHash,proto3" json:"PaymentHash,omitempty" yaml:"PaymentHash,omitempty" bson:"payment_hash,omitempty"`
	OperationHash string          `protobuf:"bytes,11,opt,name=OperationHash,proto3" json:"OperationHash,omitempty" yaml:"OperationHash,omitempty" bson:"operation_hash,omitempty"`
	Cards         []string        `protobuf:"bytes,12,rep,name=Cards,proto3" json:"Cards,omitempty" yaml:"Cards,omitempty" bson:"cards,omitempty"`
	Coins         int32           `protobuf:"varint,13,opt,name=Coins,proto3" json:"Coins,omitempty" yaml:"Coins,omitempty" bson:"coins,omitempty"`
	Error         string          `protobuf:"bytes,14,opt,name=Error,proto3" json:"Error,omitempty" yaml:"Error,omitempty" bson:"error,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{15}
}

func (x *Order) GetID() *base.ObjectID {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Order) GetBuyerID() *base.ObjectID {
	if x != nil {
		return x.BuyerID
	}
	return nil
}

func (x *Order) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Order) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *Order) GetProductType() ProductType {
	if x != nil {
		return x.ProductType
	}
	return ProductType_PackOfCards
}

func (x *Order) GetPaymentMethod() PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return PaymentMethod_USDC
}

func (x *Order) GetStatus() OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatus_Unknown
}

func (x *Order) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Order) GetCreatedAt() *base.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Order) GetPaymentHash() string {
	if x != nil {
		return x.PaymentHash
	}
	return ""
}

func (x *Order) GetOperationHash() string {
	if x != nil {
		return x.OperationHash
	}
	return ""
}

func (x *Order) GetCards() []string {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *Order) GetCoins() int32 {
	if x != nil {
		return x.Coins
	}
	return 0
}

func (x *Order) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Gift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            *base.ObjectID  `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty" yaml:"ID,omitempty" bson:"_id,omitempty"`
	Wallet        string          `protobuf:"bytes,2,opt,name=Wallet,proto3" json:"Wallet,omitempty" yaml:"Wallet,omitempty" bson:"wallet,omitempty"`
	Status        OrderStatus     `protobuf:"varint,3,opt,name=Status,proto3,enum=store.OrderStatus" json:"Status,omitempty" yaml:"Status,omitempty" bson:"status,omitempty"`
	CreatedAt     *base.Timestamp `protobuf:"bytes,4,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" yaml:"CreatedAt,omitempty" bson:"created_at,omitempty"`
	OperationHash string          `protobuf:"bytes,5,opt,name=OperationHash,proto3" json:"OperationHash,omitempty" yaml:"OperationHash,omitempty" bson:"operation_hash,omitempty"`
	Cards         []string        `protobuf:"bytes,6,rep,name=Cards,proto3" json:"Cards,omitempty" yaml:"Cards,omitempty" bson:"cards,omitempty"`
	Error         string          `protobuf:"bytes,7,opt,name=Error,proto3" json:"Error,omitempty" yaml:"Error,omitempty" bson:"error,omitempty"`
}

func (x *Gift) Reset() {
	*x = Gift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Gift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gift) ProtoMessage() {}

func (x *Gift) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Gift.ProtoReflect.Descriptor instead.
func (*Gift) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{16}
}

func (x *Gift) GetID() *base.ObjectID {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Gift) GetWallet() string {
	if x != nil {
		return x.Wallet
	}
	return ""
}

func (x *Gift) GetStatus() OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatus_Unknown
}

func (x *Gift) GetCreatedAt() *base.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Gift) GetOperationHash() string {
	if x != nil {
		return x.OperationHash
	}
	return ""
}

func (x *Gift) GetCards() []string {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *Gift) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Orders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Order `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty" yaml:"Data,omitempty" bson:"data,omitempty"`
}

func (x *Orders) Reset() {
	*x = Orders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Orders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Orders) ProtoMessage() {}

func (x *Orders) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Orders.ProtoReflect.Descriptor instead.
func (*Orders) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{17}
}

func (x *Orders) GetData() []*Order {
	if x != nil {
		return x.Data
	}
	return nil
}

type OrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID     string        `protobuf:"bytes,1,opt,name=ProductID,proto3" json:"ProductID,omitempty" yaml:"ProductID,omitempty" bson:"product_id,omitempty"`
	PaymentMethod PaymentMethod `protobuf:"varint,2,opt,name=PaymentMethod,proto3,enum=store.PaymentMethod" json:"PaymentMethod,omitempty" yaml:"PaymentMethod,omitempty" bson:"payment_method,omitempty"`
	Quantity      int64         `protobuf:"varint,3,opt,name=Quantity,proto3" json:"Quantity,omitempty" yaml:"Quantity,omitempty" bson:"quantity,omitempty"`
}

func (x *OrderRequest) Reset() {
	*x = OrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRequest) ProtoMessage() {}

func (x *OrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRequest.ProtoReflect.Descriptor instead.
func (*OrderRequest) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{18}
}

func (x *OrderRequest) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *OrderRequest) GetPaymentMethod() PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return PaymentMethod_USDC
}

func (x *OrderRequest) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type UpgradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardId        string        `protobuf:"bytes,1,opt,name=CardId,proto3" json:"CardId,omitempty" yaml:"CardId,omitempty" bson:"card_id,omitempty"`
	UpgradeId     string        `protobuf:"bytes,2,opt,name=UpgradeId,proto3" json:"UpgradeId,omitempty" yaml:"UpgradeId,omitempty" bson:"upgrade_id,omitempty"`
	PaymentMethod PaymentMethod `protobuf:"varint,3,opt,name=PaymentMethod,proto3,enum=store.PaymentMethod" json:"PaymentMethod,omitempty" yaml:"PaymentMethod,omitempty" bson:"payment_method,omitempty"`
}

func (x *UpgradeRequest) Reset() {
	*x = UpgradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeRequest) ProtoMessage() {}

func (x *UpgradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeRequest.ProtoReflect.Descriptor instead.
func (*UpgradeRequest) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{19}
}

func (x *UpgradeRequest) GetCardId() string {
	if x != nil {
		return x.CardId
	}
	return ""
}

func (x *UpgradeRequest) GetUpgradeId() string {
	if x != nil {
		return x.UpgradeId
	}
	return ""
}

func (x *UpgradeRequest) GetPaymentMethod() PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return PaymentMethod_USDC
}

type Receipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionHash string `protobuf:"bytes,3,opt,name=TransactionHash,proto3" json:"TransactionHash,omitempty" yaml:"TransactionHash,omitempty" bson:"transaction_hash,omitempty"`
	OrderID         string `protobuf:"bytes,1,opt,name=OrderID,proto3" json:"OrderID,omitempty" yaml:"OrderID,omitempty" bson:"order_id,omitempty"`
}

func (x *Receipt) Reset() {
	*x = Receipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Receipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receipt) ProtoMessage() {}

func (x *Receipt) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receipt.ProtoReflect.Descriptor instead.
func (*Receipt) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{20}
}

func (x *Receipt) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

func (x *Receipt) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

type OrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To          string                          `protobuf:"bytes,1,opt,name=To,proto3" json:"To,omitempty" yaml:"To,omitempty" bson:"to,omitempty"`
	CallData    string                          `protobuf:"bytes,2,opt,name=CallData,proto3" json:"CallData,omitempty" yaml:"CallData,omitempty" bson:"call_data,omitempty"`
	Order       *Order                          `protobuf:"bytes,3,opt,name=Order,proto3" json:"Order,omitempty" yaml:"Order,omitempty" bson:"order,omitempty"`
	Adjustments []*resources.ResourceAdjustment `protobuf:"bytes,4,rep,name=Adjustments,proto3" json:"Adjustments,omitempty" yaml:"Adjustments,omitempty" bson:"adjustments,omitempty"`
	ChainID     string                          `protobuf:"bytes,5,opt,name=ChainID,proto3" json:"ChainID,omitempty" yaml:"ChainID,omitempty" bson:"chain_id,omitempty"`
	Value       string                          `protobuf:"bytes,6,opt,name=Value,proto3" json:"Value,omitempty" yaml:"Value,omitempty" bson:"value,omitempty"`
}

func (x *OrderResponse) Reset() {
	*x = OrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderResponse) ProtoMessage() {}

func (x *OrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderResponse.ProtoReflect.Descriptor instead.
func (*OrderResponse) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{21}
}

func (x *OrderResponse) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *OrderResponse) GetCallData() string {
	if x != nil {
		return x.CallData
	}
	return ""
}

func (x *OrderResponse) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *OrderResponse) GetAdjustments() []*resources.ResourceAdjustment {
	if x != nil {
		return x.Adjustments
	}
	return nil
}

func (x *OrderResponse) GetChainID() string {
	if x != nil {
		return x.ChainID
	}
	return ""
}

func (x *OrderResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type PromoCodeSubmitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PromoCode string `protobuf:"bytes,1,opt,name=PromoCode,proto3" json:"PromoCode,omitempty" yaml:"PromoCode,omitempty" bson:"promo_code,omitempty"`
}

func (x *PromoCodeSubmitRequest) Reset() {
	*x = PromoCodeSubmitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromoCodeSubmitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoCodeSubmitRequest) ProtoMessage() {}

func (x *PromoCodeSubmitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoCodeSubmitRequest.ProtoReflect.Descriptor instead.
func (*PromoCodeSubmitRequest) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{22}
}

func (x *PromoCodeSubmitRequest) GetPromoCode() string {
	if x != nil {
		return x.PromoCode
	}
	return ""
}

type PromoCodeSubmitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success         bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty" yaml:"Success,omitempty" bson:"success"`
	Message         string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty" yaml:"Message,omitempty" bson:"message,omitempty"`
	PromoCodeTypeId string `protobuf:"bytes,3,opt,name=PromoCodeTypeId,proto3" json:"PromoCodeTypeId,omitempty" yaml:"PromoCodeTypeId,omitempty" bson:"promo_code_type_id,omitempty"`
}

func (x *PromoCodeSubmitResponse) Reset() {
	*x = PromoCodeSubmitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromoCodeSubmitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoCodeSubmitResponse) ProtoMessage() {}

func (x *PromoCodeSubmitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoCodeSubmitResponse.ProtoReflect.Descriptor instead.
func (*PromoCodeSubmitResponse) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{23}
}

func (x *PromoCodeSubmitResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PromoCodeSubmitResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PromoCodeSubmitResponse) GetPromoCodeTypeId() string {
	if x != nil {
		return x.PromoCodeTypeId
	}
	return ""
}

type TokenInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token  string      `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty" yaml:"Token,omitempty" bson:"token,omitempty"`
	Status TokenStatus `protobuf:"varint,2,opt,name=Status,proto3,enum=store.TokenStatus" json:"Status,omitempty" yaml:"Status,omitempty" bson:"status,omitempty"`
}

func (x *TokenInfo) Reset() {
	*x = TokenInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenInfo) ProtoMessage() {}

func (x *TokenInfo) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenInfo.ProtoReflect.Descriptor instead.
func (*TokenInfo) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{24}
}

func (x *TokenInfo) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *TokenInfo) GetStatus() TokenStatus {
	if x != nil {
		return x.Status
	}
	return TokenStatus_TokenWaitingForMint
}

type OpenPackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards []string `protobuf:"bytes,1,rep,name=Cards,proto3" json:"Cards,omitempty" yaml:"Cards,omitempty" bson:"cards,omitempty"`
}

func (x *OpenPackResponse) Reset() {
	*x = OpenPackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenPackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenPackResponse) ProtoMessage() {}

func (x *OpenPackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenPackResponse.ProtoReflect.Descriptor instead.
func (*OpenPackResponse) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{25}
}

func (x *OpenPackResponse) GetCards() []string {
	if x != nil {
		return x.Cards
	}
	return nil
}

type MintJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       *base.ObjectID `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty" yaml:"ID,omitempty" bson:"_id,omitempty"`
	MintType MintType       `protobuf:"varint,2,opt,name=MintType,proto3,enum=store.MintType" json:"MintType,omitempty" yaml:"MintType,omitempty" bson:"mint_type,omitempty"`
}

func (x *MintJobRequest) Reset() {
	*x = MintJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MintJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MintJobRequest) ProtoMessage() {}

func (x *MintJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MintJobRequest.ProtoReflect.Descriptor instead.
func (*MintJobRequest) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{26}
}

func (x *MintJobRequest) GetID() *base.ObjectID {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *MintJobRequest) GetMintType() MintType {
	if x != nil {
		return x.MintType
	}
	return MintType_MintOrder
}

type CoinsPurchaseResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coins   *resources.ResourceAdjustment `protobuf:"bytes,1,opt,name=Coins,proto3" json:"Coins,omitempty" yaml:"Coins,omitempty" bson:"coins,omitempty"`
	OrderID *base.ObjectID                `protobuf:"bytes,2,opt,name=OrderID,proto3" json:"OrderID,omitempty" yaml:"OrderID,omitempty" bson:"order_id,omitempty"`
}

func (x *CoinsPurchaseResult) Reset() {
	*x = CoinsPurchaseResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinsPurchaseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinsPurchaseResult) ProtoMessage() {}

func (x *CoinsPurchaseResult) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinsPurchaseResult.ProtoReflect.Descriptor instead.
func (*CoinsPurchaseResult) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{27}
}

func (x *CoinsPurchaseResult) GetCoins() *resources.ResourceAdjustment {
	if x != nil {
		return x.Coins
	}
	return nil
}

func (x *CoinsPurchaseResult) GetOrderID() *base.ObjectID {
	if x != nil {
		return x.OrderID
	}
	return nil
}

type PackPurchaseResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderID *base.ObjectID `protobuf:"bytes,1,opt,name=OrderID,proto3" json:"OrderID,omitempty" yaml:"OrderID,omitempty" bson:"order_id,omitempty"`
	Status  OrderStatus    `protobuf:"varint,2,opt,name=Status,proto3,enum=store.OrderStatus" json:"Status,omitempty" yaml:"Status,omitempty" bson:"status,omitempty"`
}

func (x *PackPurchaseResult) Reset() {
	*x = PackPurchaseResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackPurchaseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackPurchaseResult) ProtoMessage() {}

func (x *PackPurchaseResult) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackPurchaseResult.ProtoReflect.Descriptor instead.
func (*PackPurchaseResult) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{28}
}

func (x *PackPurchaseResult) GetOrderID() *base.ObjectID {
	if x != nil {
		return x.OrderID
	}
	return nil
}

func (x *PackPurchaseResult) GetStatus() OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatus_Unknown
}

type CardUpgradeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderID        *base.ObjectID `protobuf:"bytes,1,opt,name=OrderID,proto3" json:"OrderID,omitempty" yaml:"OrderID,omitempty" bson:"order_id,omitempty"`
	OriginalCardID string         `protobuf:"bytes,2,opt,name=OriginalCardID,proto3" json:"OriginalCardID,omitempty" yaml:"OriginalCardID,omitempty" bson:"original_card_id,omitempty"`
	NewCardId      string         `protobuf:"bytes,3,opt,name=NewCardId,proto3" json:"NewCardId,omitempty" yaml:"NewCardId,omitempty" bson:"new_card_id,omitempty"`
}

func (x *CardUpgradeResult) Reset() {
	*x = CardUpgradeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardUpgradeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardUpgradeResult) ProtoMessage() {}

func (x *CardUpgradeResult) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardUpgradeResult.ProtoReflect.Descriptor instead.
func (*CardUpgradeResult) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{29}
}

func (x *CardUpgradeResult) GetOrderID() *base.ObjectID {
	if x != nil {
		return x.OrderID
	}
	return nil
}

func (x *CardUpgradeResult) GetOriginalCardID() string {
	if x != nil {
		return x.OriginalCardID
	}
	return ""
}

func (x *CardUpgradeResult) GetNewCardId() string {
	if x != nil {
		return x.NewCardId
	}
	return ""
}

type TokenPurchaseResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens  *resources.ResourceAdjustment `protobuf:"bytes,1,opt,name=Tokens,proto3" json:"Tokens,omitempty" yaml:"Tokens,omitempty" bson:"tokens,omitempty"`
	OrderID *base.ObjectID                `protobuf:"bytes,2,opt,name=OrderID,proto3" json:"OrderID,omitempty" yaml:"OrderID,omitempty" bson:"order_id,omitempty"`
}

func (x *TokenPurchaseResult) Reset() {
	*x = TokenPurchaseResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenPurchaseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenPurchaseResult) ProtoMessage() {}

func (x *TokenPurchaseResult) ProtoReflect() protoreflect.Message {
	mi := &file_store_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenPurchaseResult.ProtoReflect.Descriptor instead.
func (*TokenPurchaseResult) Descriptor() ([]byte, []int) {
	return file_store_proto_rawDescGZIP(), []int{30}
}

func (x *TokenPurchaseResult) GetTokens() *resources.ResourceAdjustment {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *TokenPurchaseResult) GetOrderID() *base.ObjectID {
	if x != nil {
		return x.OrderID
	}
	return nil
}

var File_store_proto protoreflect.FileDescriptor

var file_store_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x1a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1e,
	0x0a, 0x06, 0x42, 0x69, 0x67, 0x49, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf1,
	0x01, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x5b, 0x0a, 0x11, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12,
	0x3b, 0x0a, 0x10, 0x4c, 0x61, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x4c, 0x61, 0x73, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x74, 0x1a, 0x44, 0x0a, 0x16,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xd0, 0x01, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x12, 0x27, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x33, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6c, 0x0a, 0x10, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x09, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0xc8, 0x04, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x31, 0x0a, 0x0d, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x0d, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x05, 0x50, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x61, 0x63, 0x6b,
	0x52, 0x05, 0x50, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x43, 0x6f, 0x69, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x43,
	0x6f, 0x69, 0x6e, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x05, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12,
	0x40, 0x0a, 0x0f, 0x4c, 0x6f, 0x43, 0x47, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x4c, 0x6f, 0x43, 0x47, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x61, 0x74, 0x65,
	0x52, 0x0f, 0x4c, 0x6f, 0x43, 0x47, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x3d, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x12, 0x3a, 0x0a, 0x08, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x08, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x06,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x06, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x45, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x52, 0x0e, 0x45, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x1a, 0x4d, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x4c, 0x0a, 0x0d, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x60,
	0x0a, 0x0f, 0x4c, 0x6f, 0x43, 0x47, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x37, 0x0a, 0x0e, 0x4e, 0x65, 0x78, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x4e, 0x65, 0x78, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x22, 0x5f, 0x0a, 0x0e, 0x45, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x37, 0x0a, 0x0e, 0x4e, 0x65, 0x78, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x4e, 0x65, 0x78,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x22, 0x6f, 0x0a, 0x09, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x55, 0x53, 0x44,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x55,
	0x53, 0x44, 0x22, 0xbb, 0x04, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x61, 0x78, 0x53,
	0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4d, 0x61, 0x78,
	0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x51, 0x74, 0x79, 0x50, 0x65, 0x72,
	0x55, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x51, 0x74, 0x79, 0x50,
	0x65, 0x72, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x61, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x53, 0x61, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x61, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x53, 0x61, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x55, 0x53, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0a, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x55, 0x53, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x4c, 0x4f, 0x43, 0x47, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x09, 0x4c, 0x4f, 0x43, 0x47, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x61,
	0x78, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x4d, 0x61, 0x78, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x4d, 0x69, 0x6e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x4d, 0x69, 0x6e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x40, 0x0a, 0x1b,
	0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x1b, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x29,
	0x0a, 0x06, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x12, 0x35, 0x0a, 0x0a, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x22, 0x82, 0x01, 0x0a, 0x0a, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x61, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x53, 0x61, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x53, 0x61, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x53, 0x61, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x4c, 0x4f, 0x43, 0x47, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x11, 0x4c, 0x4f, 0x43, 0x47, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x4f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x22, 0x86, 0x02, 0x0a, 0x0e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x61, 0x6c, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x50, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x15, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x73, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x45, 0x78, 0x63, 0x65,
	0x70, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x14, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x22, 0xd1,
	0x02, 0x0a, 0x04, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x28, 0x0a, 0x0f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f,
	0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x25, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x61, 0x78, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x4d, 0x61, 0x78,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x55, 0x53, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x55, 0x53, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x4c,
	0x43, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x4c, 0x43, 0x22, 0x33, 0x0a, 0x08, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x12, 0x27,
	0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xda, 0x02, 0x0a, 0x0e, 0x52, 0x61, 0x6e, 0x64,
	0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x53, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x50, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x63, 0x6b,
	0x12, 0x4b, 0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x61, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x52,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x61, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0c, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x61, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x51, 0x0a,
	0x0e, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x52, 0x61, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x61,
	0x6e, 0x64, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x56, 0x69, 0x73,
	0x75, 0x61, 0x6c, 0x52, 0x61, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0e, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x52, 0x61, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x1a, 0x3f, 0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x61, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x41, 0x0a, 0x13, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x52, 0x61, 0x72, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x75, 0x0a, 0x08, 0x50, 0x61, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x2a, 0x0a, 0x10, 0x50, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x50, 0x72, 0x65, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x12, 0x3d, 0x0a, 0x0e,
	0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x61, 0x6e,
	0x64, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0e, 0x52, 0x61, 0x6e,
	0x64, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x22, 0xf8, 0x03, 0x0a, 0x05,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x44, 0x52, 0x02, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x07, 0x42, 0x75, 0x79, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x52, 0x07, 0x42, 0x75, 0x79, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x0b, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x3a, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0d, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2d, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x24,
	0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f,
	0x69, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x69, 0x6e, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xeb, 0x01, 0x0a, 0x04, 0x47, 0x69, 0x66, 0x74, 0x12,
	0x1e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x2a, 0x0a, 0x06, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x20,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x84, 0x01, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12,
	0x3a, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0d, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x3a, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0d, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x4d, 0x0a, 0x07,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x22, 0xd0, 0x01, 0x0a, 0x0d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x54, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x05, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x3f, 0x0a,
	0x0b, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0b, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x36,
	0x0a, 0x16, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x77, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x43,
	0x6f, 0x64, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x43, 0x6f,
	0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22,
	0x4d, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x2a, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x28,
	0x0a, 0x10, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x5d, 0x0a, 0x0e, 0x4d, 0x69, 0x6e, 0x74,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x52, 0x02, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x08, 0x4d, 0x69,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x4d,
	0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x74, 0x0a, 0x13, 0x43, 0x6f, 0x69, 0x6e, 0x73,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x33,
	0x0a, 0x05, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x43, 0x6f,
	0x69, 0x6e, 0x73, 0x12, 0x28, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x22, 0x6a, 0x0a,
	0x12, 0x50, 0x61, 0x63, 0x6b, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2a, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x11, 0x43, 0x61,
	0x72, 0x64, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x28, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44,
	0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x65, 0x77, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22,
	0x76, 0x0a, 0x13, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x28, 0x0a,
	0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x52, 0x07,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x2a, 0x29, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x69, 0x78, 0x65, 0x64,
	0x10, 0x01, 0x2a, 0x5e, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x4f, 0x66, 0x43, 0x61, 0x72, 0x64, 0x73,
	0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x4f, 0x66, 0x43, 0x6f, 0x69, 0x6e,
	0x73, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x61, 0x72, 0x64, 0x55, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x56, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x10, 0x04, 0x2a, 0x80, 0x01, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x53, 0x44, 0x43, 0x10, 0x00, 0x12, 0x06,
	0x0a, 0x02, 0x4c, 0x43, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x4f, 0x43, 0x47, 0x10, 0x02,
	0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x4f, 0x43, 0x47, 0x42, 0x61, 0x73, 0x65, 0x10, 0x03, 0x12, 0x07,
	0x0a, 0x03, 0x45, 0x54, 0x48, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x61, 0x79, 0x50, 0x61,
	0x6c, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x10, 0x06,
	0x12, 0x0c, 0x0a, 0x08, 0x55, 0x53, 0x44, 0x43, 0x42, 0x61, 0x73, 0x65, 0x10, 0x07, 0x12, 0x08,
	0x0a, 0x04, 0x55, 0x53, 0x44, 0x54, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x54, 0x48, 0x42,
	0x61, 0x73, 0x65, 0x10, 0x09, 0x2a, 0x8b, 0x01, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x10, 0x01,
	0x12, 0x15, 0x0a, 0x11, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06,
	0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x6e, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x70, 0x65, 0x6e, 0x65,
	0x64, 0x10, 0x07, 0x2a, 0x59, 0x0a, 0x0b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x69,
	0x6e, 0x67, 0x46, 0x6f, 0x72, 0x4d, 0x69, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0f, 0x0a,
	0x0b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0e,
	0x0a, 0x0a, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x03, 0x2a, 0x38,
	0x0a, 0x08, 0x4d, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x69,
	0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x69, 0x6e,
	0x74, 0x47, 0x69, 0x66, 0x74, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x69, 0x6e, 0x74, 0x55,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x10, 0x02, 0x42, 0x30, 0x5a, 0x1d, 0x6c, 0x6f, 0x63, 0x67,
	0x61, 0x6d, 0x65, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x64, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0xaa, 0x02, 0x0e, 0x4c, 0x6f, 0x43, 0x2e,
	0x44, 0x54, 0x4f, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_store_proto_rawDescOnce sync.Once
	file_store_proto_rawDescData = file_store_proto_rawDesc
)

func file_store_proto_rawDescGZIP() []byte {
	file_store_proto_rawDescOnce.Do(func() {
		file_store_proto_rawDescData = protoimpl.X.CompressGZIP(file_store_proto_rawDescData)
	})
	return file_store_proto_rawDescData
}

var file_store_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_store_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_store_proto_goTypes = []any{
	(DiscountType)(0),                    // 0: store.DiscountType
	(ProductType)(0),                     // 1: store.ProductType
	(PaymentMethod)(0),                   // 2: store.PaymentMethod
	(OrderStatus)(0),                     // 3: store.OrderStatus
	(TokenStatus)(0),                     // 4: store.TokenStatus
	(MintType)(0),                        // 5: store.MintType
	(*BigInt)(nil),                       // 6: store.BigInt
	(*PlayerStoreData)(nil),              // 7: store.PlayerStoreData
	(*Discount)(nil),                     // 8: store.Discount
	(*DiscountDuration)(nil),             // 9: store.DiscountDuration
	(*StoreData)(nil),                    // 10: store.StoreData
	(*LoCGConvertRate)(nil),              // 11: store.LoCGConvertRate
	(*EthConvertRate)(nil),               // 12: store.EthConvertRate
	(*CoinsPack)(nil),                    // 13: store.CoinsPack
	(*Token)(nil),                        // 14: store.Token
	(*TokenOffer)(nil),                   // 15: store.TokenOffer
	(*TokenPromoCode)(nil),               // 16: store.TokenPromoCode
	(*Pack)(nil),                         // 17: store.Pack
	(*Upgrades)(nil),                     // 18: store.Upgrades
	(*RandomizedCard)(nil),               // 19: store.RandomizedCard
	(*PackItem)(nil),                     // 20: store.PackItem
	(*Order)(nil),                        // 21: store.Order
	(*Gift)(nil),                         // 22: store.Gift
	(*Orders)(nil),                       // 23: store.Orders
	(*OrderRequest)(nil),                 // 24: store.OrderRequest
	(*UpgradeRequest)(nil),               // 25: store.UpgradeRequest
	(*Receipt)(nil),                      // 26: store.Receipt
	(*OrderResponse)(nil),                // 27: store.OrderResponse
	(*PromoCodeSubmitRequest)(nil),       // 28: store.PromoCodeSubmitRequest
	(*PromoCodeSubmitResponse)(nil),      // 29: store.PromoCodeSubmitResponse
	(*TokenInfo)(nil),                    // 30: store.TokenInfo
	(*OpenPackResponse)(nil),             // 31: store.OpenPackResponse
	(*MintJobRequest)(nil),               // 32: store.MintJobRequest
	(*CoinsPurchaseResult)(nil),          // 33: store.CoinsPurchaseResult
	(*PackPurchaseResult)(nil),           // 34: store.PackPurchaseResult
	(*CardUpgradeResult)(nil),            // 35: store.CardUpgradeResult
	(*TokenPurchaseResult)(nil),          // 36: store.TokenPurchaseResult
	nil,                                  // 37: store.PlayerStoreData.PurchasedProductsEntry
	nil,                                  // 38: store.StoreData.DiscountsEntry
	nil,                                  // 39: store.StoreData.UpgradesEntry
	nil,                                  // 40: store.RandomizedCard.GameRaritiesEntry
	nil,                                  // 41: store.RandomizedCard.VisualRaritiesEntry
	(*base.Timestamp)(nil),               // 42: base.Timestamp
	(*base.ObjectID)(nil),                // 43: base.ObjectID
	(*cards.Option)(nil),                 // 44: cards.Option
	(*resources.ResourceAdjustment)(nil), // 45: resources.ResourceAdjustment
}
var file_store_proto_depIdxs = []int32{
	37, // 0: store.PlayerStoreData.PurchasedProducts:type_name -> store.PlayerStoreData.PurchasedProductsEntry
	42, // 1: store.PlayerStoreData.LastWithdrawalAt:type_name -> base.Timestamp
	43, // 2: store.Discount.ID:type_name -> base.ObjectID
	0,  // 3: store.Discount.Type:type_name -> store.DiscountType
	9,  // 4: store.Discount.Duration:type_name -> store.DiscountDuration
	42, // 5: store.DiscountDuration.StartTime:type_name -> base.Timestamp
	42, // 6: store.DiscountDuration.EndTime:type_name -> base.Timestamp
	17, // 7: store.StoreData.SpecialOffers:type_name -> store.Pack
	17, // 8: store.StoreData.Packs:type_name -> store.Pack
	13, // 9: store.StoreData.Coins:type_name -> store.CoinsPack
	11, // 10: store.StoreData.LoCGConvertRate:type_name -> store.LoCGConvertRate
	38, // 11: store.StoreData.Discounts:type_name -> store.StoreData.DiscountsEntry
	39, // 12: store.StoreData.Upgrades:type_name -> store.StoreData.UpgradesEntry
	14, // 13: store.StoreData.Tokens:type_name -> store.Token
	12, // 14: store.StoreData.EthConvertRate:type_name -> store.EthConvertRate
	42, // 15: store.LoCGConvertRate.NextUpdateTime:type_name -> base.Timestamp
	42, // 16: store.EthConvertRate.NextUpdateTime:type_name -> base.Timestamp
	15, // 17: store.Token.Offers:type_name -> store.TokenOffer
	16, // 18: store.Token.PromoCodes:type_name -> store.TokenPromoCode
	20, // 19: store.Pack.Items:type_name -> store.PackItem
	44, // 20: store.Upgrades.Options:type_name -> cards.Option
	40, // 21: store.RandomizedCard.GameRarities:type_name -> store.RandomizedCard.GameRaritiesEntry
	41, // 22: store.RandomizedCard.VisualRarities:type_name -> store.RandomizedCard.VisualRaritiesEntry
	19, // 23: store.PackItem.RandomizedCard:type_name -> store.RandomizedCard
	43, // 24: store.Order.ID:type_name -> base.ObjectID
	43, // 25: store.Order.BuyerID:type_name -> base.ObjectID
	1,  // 26: store.Order.ProductType:type_name -> store.ProductType
	2,  // 27: store.Order.PaymentMethod:type_name -> store.PaymentMethod
	3,  // 28: store.Order.Status:type_name -> store.OrderStatus
	42, // 29: store.Order.CreatedAt:type_name -> base.Timestamp
	43, // 30: store.Gift.ID:type_name -> base.ObjectID
	3,  // 31: store.Gift.Status:type_name -> store.OrderStatus
	42, // 32: store.Gift.CreatedAt:type_name -> base.Timestamp
	21, // 33: store.Orders.Data:type_name -> store.Order
	2,  // 34: store.OrderRequest.PaymentMethod:type_name -> store.PaymentMethod
	2,  // 35: store.UpgradeRequest.PaymentMethod:type_name -> store.PaymentMethod
	21, // 36: store.OrderResponse.Order:type_name -> store.Order
	45, // 37: store.OrderResponse.Adjustments:type_name -> resources.ResourceAdjustment
	4,  // 38: store.TokenInfo.Status:type_name -> store.TokenStatus
	43, // 39: store.MintJobRequest.ID:type_name -> base.ObjectID
	5,  // 40: store.MintJobRequest.MintType:type_name -> store.MintType
	45, // 41: store.CoinsPurchaseResult.Coins:type_name -> resources.ResourceAdjustment
	43, // 42: store.CoinsPurchaseResult.OrderID:type_name -> base.ObjectID
	43, // 43: store.PackPurchaseResult.OrderID:type_name -> base.ObjectID
	3,  // 44: store.PackPurchaseResult.Status:type_name -> store.OrderStatus
	43, // 45: store.CardUpgradeResult.OrderID:type_name -> base.ObjectID
	45, // 46: store.TokenPurchaseResult.Tokens:type_name -> resources.ResourceAdjustment
	43, // 47: store.TokenPurchaseResult.OrderID:type_name -> base.ObjectID
	8,  // 48: store.StoreData.DiscountsEntry.value:type_name -> store.Discount
	18, // 49: store.StoreData.UpgradesEntry.value:type_name -> store.Upgrades
	50, // [50:50] is the sub-list for method output_type
	50, // [50:50] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_store_proto_init() }
func file_store_proto_init() {
	if File_store_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_store_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*BigInt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerStoreData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Discount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DiscountDuration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*StoreData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*LoCGConvertRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*EthConvertRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CoinsPack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*TokenOffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*TokenPromoCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*Pack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*Upgrades); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*RandomizedCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*PackItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*Gift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*Orders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*OrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*UpgradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*Receipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*OrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*PromoCodeSubmitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*PromoCodeSubmitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*TokenInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*OpenPackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*MintJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*CoinsPurchaseResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*PackPurchaseResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*CardUpgradeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*TokenPurchaseResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_store_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_store_proto_goTypes,
		DependencyIndexes: file_store_proto_depIdxs,
		EnumInfos:         file_store_proto_enumTypes,
		MessageInfos:      file_store_proto_msgTypes,
	}.Build()
	File_store_proto = out.File
	file_store_proto_rawDesc = nil
	file_store_proto_goTypes = nil
	file_store_proto_depIdxs = nil
}
