// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.27.2
// source: player.proto

package player

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	arena "locgame-service/pkg/dto/arena"
	base "locgame-service/pkg/dto/base"
	cards "locgame-service/pkg/dto/cards"
	resources "locgame-service/pkg/dto/resources"
	store "locgame-service/pkg/dto/store"
	tutorial "locgame-service/pkg/dto/tutorial"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status_OFFLINE                        Status = 0
	Status_ONLINE                         Status = 1
	Status_PLAYING                        Status = 2
	Status_PENDING_TO_RECONNECT           Status = 3
	Status_PENDING_FRIEND_REQUEST         Status = 4
	Status_PENDING_FRIENDLY_MATCH_REQUEST Status = 5
	Status_QUICK_MATCH_REQUEST            Status = 6
	Status_PENDING_QUICK_MATCH_REQUEST    Status = 7
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "OFFLINE",
		1: "ONLINE",
		2: "PLAYING",
		3: "PENDING_TO_RECONNECT",
		4: "PENDING_FRIEND_REQUEST",
		5: "PENDING_FRIENDLY_MATCH_REQUEST",
		6: "QUICK_MATCH_REQUEST",
		7: "PENDING_QUICK_MATCH_REQUEST",
	}
	Status_value = map[string]int32{
		"OFFLINE":                        0,
		"ONLINE":                         1,
		"PLAYING":                        2,
		"PENDING_TO_RECONNECT":           3,
		"PENDING_FRIEND_REQUEST":         4,
		"PENDING_FRIENDLY_MATCH_REQUEST": 5,
		"QUICK_MATCH_REQUEST":            6,
		"PENDING_QUICK_MATCH_REQUEST":    7,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_player_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_player_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{0}
}

type PlayerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                  *base.ObjectID                              `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty" yaml:"ID,omitempty" bson:"_id,omitempty"`
	ActiveWallet        string                                      `protobuf:"bytes,2,opt,name=ActiveWallet,proto3" json:"ActiveWallet,omitempty" yaml:"ActiveWallet,omitempty" bson:"active_wallet,omitempty"`
	Name                string                                      `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty" yaml:"Name,omitempty" bson:"name,omitempty"`
	AvatarID            string                                      `protobuf:"bytes,4,opt,name=AvatarID,proto3" json:"AvatarID,omitempty" yaml:"AvatarID,omitempty" bson:"avatar_id,omitempty"`
	LastActivity        *base.Timestamp                             `protobuf:"bytes,5,opt,name=LastActivity,proto3" json:"LastActivity,omitempty" yaml:"LastActivity,omitempty" bson:"last_activity,omitempty"`
	Online              bool                                        `protobuf:"varint,6,opt,name=Online,proto3" json:"Online,omitempty" yaml:"Online,omitempty" bson:"online"`
	Decks               *cards.Decks                                `protobuf:"bytes,7,opt,name=Decks,proto3" json:"Decks,omitempty" yaml:"Decks,omitempty" bson:"decks,omitempty"`
	Resources           map[int32]int32                             `protobuf:"bytes,8,rep,name=Resources,proto3" json:"Resources,omitempty" yaml:"Resources,omitempty" bson:"resources,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	ResettableResources map[int32]*resources.ResettableResourceData `protobuf:"bytes,9,rep,name=ResettableResources,proto3" json:"ResettableResources,omitempty" yaml:"ResettableResources,omitempty" bson:"resettable_resources,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	StoryMode           *StoryModeData                              `protobuf:"bytes,10,opt,name=StoryMode,proto3" json:"StoryMode,omitempty" yaml:"StoryMode,omitempty" bson:"story_mode,omitempty"`
	ArenaData           *arena.ArenaData                            `protobuf:"bytes,11,opt,name=ArenaData,proto3" json:"ArenaData,omitempty" yaml:"ArenaData,omitempty" bson:"arena_data,omitempty"`
	PlayerStoreData     *store.PlayerStoreData                      `protobuf:"bytes,12,opt,name=PlayerStoreData,proto3" json:"PlayerStoreData,omitempty" yaml:"PlayerStoreData,omitempty" bson:"player_store_data,omitempty"`
	TutorialData        *tutorial.TutorialData                      `protobuf:"bytes,13,opt,name=TutorialData,proto3" json:"TutorialData,omitempty" yaml:"TutorialData,omitempty" bson:"tutorial_data,omitempty"`
	CreatedAt           *base.Timestamp                             `protobuf:"bytes,14,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" yaml:"CreatedAt,omitempty" bson:"created_at,omitempty"`
	Status              Status                                      `protobuf:"varint,15,opt,name=status,proto3,enum=player.Status" json:"status,omitempty" yaml:"status,omitempty" bson:"status,omitempty"`
	CognitoUsername     string                                      `protobuf:"bytes,16,opt,name=CognitoUsername,proto3" json:"CognitoUsername,omitempty" yaml:"CognitoUsername,omitempty" bson:"cognito_username,omitempty"`
	Email               string                                      `protobuf:"bytes,17,opt,name=Email,proto3" json:"Email,omitempty" yaml:"Email,omitempty" bson:"email,omitempty"`
	ParticleWallet      string                                      `protobuf:"bytes,18,opt,name=ParticleWallet,proto3" json:"ParticleWallet,omitempty" yaml:"ParticleWallet,omitempty" bson:"particle_wallet,omitempty"`
	ExternalWallet      string                                      `protobuf:"bytes,19,opt,name=ExternalWallet,proto3" json:"ExternalWallet,omitempty" yaml:"ExternalWallet,omitempty" bson:"external_wallet,omitempty"`
	OwnedCards          []string                                    `protobuf:"bytes,20,rep,name=OwnedCards,proto3" json:"OwnedCards,omitempty" yaml:"OwnedCards,omitempty" bson:"owned_cards,omitempty"`
	VirtualCards        []string                                    `protobuf:"bytes,21,rep,name=VirtualCards,proto3" json:"VirtualCards,omitempty" yaml:"VirtualCards,omitempty" bson:"virtual_cards,omitnil"`
}

func (x *PlayerData) Reset() {
	*x = PlayerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerData) ProtoMessage() {}

func (x *PlayerData) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerData.ProtoReflect.Descriptor instead.
func (*PlayerData) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{0}
}

func (x *PlayerData) GetID() *base.ObjectID {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *PlayerData) GetActiveWallet() string {
	if x != nil {
		return x.ActiveWallet
	}
	return ""
}

func (x *PlayerData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlayerData) GetAvatarID() string {
	if x != nil {
		return x.AvatarID
	}
	return ""
}

func (x *PlayerData) GetLastActivity() *base.Timestamp {
	if x != nil {
		return x.LastActivity
	}
	return nil
}

func (x *PlayerData) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *PlayerData) GetDecks() *cards.Decks {
	if x != nil {
		return x.Decks
	}
	return nil
}

func (x *PlayerData) GetResources() map[int32]int32 {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *PlayerData) GetResettableResources() map[int32]*resources.ResettableResourceData {
	if x != nil {
		return x.ResettableResources
	}
	return nil
}

func (x *PlayerData) GetStoryMode() *StoryModeData {
	if x != nil {
		return x.StoryMode
	}
	return nil
}

func (x *PlayerData) GetArenaData() *arena.ArenaData {
	if x != nil {
		return x.ArenaData
	}
	return nil
}

func (x *PlayerData) GetPlayerStoreData() *store.PlayerStoreData {
	if x != nil {
		return x.PlayerStoreData
	}
	return nil
}

func (x *PlayerData) GetTutorialData() *tutorial.TutorialData {
	if x != nil {
		return x.TutorialData
	}
	return nil
}

func (x *PlayerData) GetCreatedAt() *base.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PlayerData) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OFFLINE
}

func (x *PlayerData) GetCognitoUsername() string {
	if x != nil {
		return x.CognitoUsername
	}
	return ""
}

func (x *PlayerData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *PlayerData) GetParticleWallet() string {
	if x != nil {
		return x.ParticleWallet
	}
	return ""
}

func (x *PlayerData) GetExternalWallet() string {
	if x != nil {
		return x.ExternalWallet
	}
	return ""
}

func (x *PlayerData) GetOwnedCards() []string {
	if x != nil {
		return x.OwnedCards
	}
	return nil
}

func (x *PlayerData) GetVirtualCards() []string {
	if x != nil {
		return x.VirtualCards
	}
	return nil
}

type PlayerDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       *PlayerData `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty" yaml:"Data,omitempty" bson:"data,omitempty"`
	OwnedCards []string    `protobuf:"bytes,2,rep,name=OwnedCards,proto3" json:"OwnedCards,omitempty" yaml:"OwnedCards,omitempty" bson:"owned_cards,omitempty"`
}

func (x *PlayerDataResponse) Reset() {
	*x = PlayerDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerDataResponse) ProtoMessage() {}

func (x *PlayerDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerDataResponse.ProtoReflect.Descriptor instead.
func (*PlayerDataResponse) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{1}
}

func (x *PlayerDataResponse) GetData() *PlayerData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PlayerDataResponse) GetOwnedCards() []string {
	if x != nil {
		return x.OwnedCards
	}
	return nil
}

type StoryModeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastUnlockedLevel int32 `protobuf:"varint,1,opt,name=LastUnlockedLevel,proto3" json:"LastUnlockedLevel,omitempty" yaml:"LastUnlockedLevel,omitempty" bson:"last_unlocked_level,omitempty"`
}

func (x *StoryModeData) Reset() {
	*x = StoryModeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryModeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryModeData) ProtoMessage() {}

func (x *StoryModeData) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryModeData.ProtoReflect.Descriptor instead.
func (*StoryModeData) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{2}
}

func (x *StoryModeData) GetLastUnlockedLevel() int32 {
	if x != nil {
		return x.LastUnlockedLevel
	}
	return 0
}

type DailyRewardData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           *base.ObjectID  `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty" yaml:"ID,omitempty" bson:"_id,omitempty"`
	Counter      int32           `protobuf:"varint,2,opt,name=Counter,proto3" json:"Counter,omitempty" yaml:"Counter,omitempty" bson:"counter,omitempty"`
	LastLoggedAt *base.Timestamp `protobuf:"bytes,3,opt,name=LastLoggedAt,proto3" json:"LastLoggedAt,omitempty" yaml:"LastLoggedAt,omitempty" bson:"last_logged_at,omitempty"`
}

func (x *DailyRewardData) Reset() {
	*x = DailyRewardData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyRewardData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyRewardData) ProtoMessage() {}

func (x *DailyRewardData) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyRewardData.ProtoReflect.Descriptor instead.
func (*DailyRewardData) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{3}
}

func (x *DailyRewardData) GetID() *base.ObjectID {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *DailyRewardData) GetCounter() int32 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *DailyRewardData) GetLastLoggedAt() *base.Timestamp {
	if x != nil {
		return x.LastLoggedAt
	}
	return nil
}

type DailyRewardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllRewards     []*resources.ResourceAdjustment `protobuf:"bytes,1,rep,name=AllRewards,proto3" json:"AllRewards,omitempty" yaml:"AllRewards,omitempty" bson:"all_rewards,omitempty"`
	CurrentRewards *resources.ResourceAdjustment   `protobuf:"bytes,2,opt,name=CurrentRewards,proto3" json:"CurrentRewards,omitempty" yaml:"CurrentRewards,omitempty" bson:"current_rewards,omitempty"`
	Data           *DailyRewardData                `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty" yaml:"Data,omitempty" bson:"data,omitempty"`
}

func (x *DailyRewardsResponse) Reset() {
	*x = DailyRewardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyRewardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyRewardsResponse) ProtoMessage() {}

func (x *DailyRewardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyRewardsResponse.ProtoReflect.Descriptor instead.
func (*DailyRewardsResponse) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{4}
}

func (x *DailyRewardsResponse) GetAllRewards() []*resources.ResourceAdjustment {
	if x != nil {
		return x.AllRewards
	}
	return nil
}

func (x *DailyRewardsResponse) GetCurrentRewards() *resources.ResourceAdjustment {
	if x != nil {
		return x.CurrentRewards
	}
	return nil
}

func (x *DailyRewardsResponse) GetData() *DailyRewardData {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_player_proto protoreflect.FileDescriptor

var file_player_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x1a, 0x0b, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0b, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x74, 0x75, 0x74, 0x6f,
	0x72, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc8, 0x08, 0x0a, 0x0a, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x44, 0x52, 0x02, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x44, 0x12, 0x33, 0x0a,
	0x0c, 0x4c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x4c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x44, 0x65,
	0x63, 0x6b, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x73, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x73, 0x52, 0x05, 0x44, 0x65, 0x63, 0x6b, 0x73, 0x12, 0x3f,
	0x0a, 0x09, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12,
	0x5d, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x33,
	0x0a, 0x09, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79,
	0x4d, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x2e, 0x41,
	0x72, 0x65, 0x6e, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x0c, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x75,
	0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0c, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x2d, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x6f, 0x67, 0x6e,
	0x69, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x43, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x77, 0x6e, 0x65,
	0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x77,
	0x6e, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x73, 0x1a, 0x3c, 0x0a, 0x0e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x69, 0x0a, 0x18, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x37, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5c, 0x0a, 0x12, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x73, 0x22, 0x3d, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x11, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x11, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x22, 0x80, 0x01, 0x0a, 0x0f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x44, 0x52, 0x02, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x12, 0x33, 0x0a, 0x0c, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67,
	0x67, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc9, 0x01, 0x0a, 0x14, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x0a, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x45, 0x0a,
	0x0e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x44, 0x61, 0x69, 0x6c,
	0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x2a, 0xc2, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07,
	0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x4e, 0x4c,
	0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x4c, 0x41, 0x59, 0x49, 0x4e, 0x47,
	0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x4f,
	0x5f, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16,
	0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x04, 0x12, 0x22, 0x0a, 0x1e, 0x50, 0x45, 0x4e, 0x44,
	0x49, 0x4e, 0x47, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x4c, 0x59, 0x5f, 0x4d, 0x41, 0x54,
	0x43, 0x48, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13,
	0x51, 0x55, 0x49, 0x43, 0x4b, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x10, 0x06, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x5f, 0x51, 0x55, 0x49, 0x43, 0x4b, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x10, 0x07, 0x42, 0x32, 0x5a, 0x1e, 0x6c, 0x6f, 0x63, 0x67, 0x61, 0x6d,
	0x65, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x64, 0x74,
	0x6f, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0xaa, 0x02, 0x0f, 0x4c, 0x6f, 0x43, 0x2e, 0x44,
	0x54, 0x4f, 0x73, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_player_proto_rawDescOnce sync.Once
	file_player_proto_rawDescData = file_player_proto_rawDesc
)

func file_player_proto_rawDescGZIP() []byte {
	file_player_proto_rawDescOnce.Do(func() {
		file_player_proto_rawDescData = protoimpl.X.CompressGZIP(file_player_proto_rawDescData)
	})
	return file_player_proto_rawDescData
}

var file_player_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_player_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_player_proto_goTypes = []interface{}{
	(Status)(0),                              // 0: player.Status
	(*PlayerData)(nil),                       // 1: player.PlayerData
	(*PlayerDataResponse)(nil),               // 2: player.PlayerDataResponse
	(*StoryModeData)(nil),                    // 3: player.StoryModeData
	(*DailyRewardData)(nil),                  // 4: player.DailyRewardData
	(*DailyRewardsResponse)(nil),             // 5: player.DailyRewardsResponse
	nil,                                      // 6: player.PlayerData.ResourcesEntry
	nil,                                      // 7: player.PlayerData.ResettableResourcesEntry
	(*base.ObjectID)(nil),                    // 8: base.ObjectID
	(*base.Timestamp)(nil),                   // 9: base.Timestamp
	(*cards.Decks)(nil),                      // 10: cards.Decks
	(*arena.ArenaData)(nil),                  // 11: arena.ArenaData
	(*store.PlayerStoreData)(nil),            // 12: store.PlayerStoreData
	(*tutorial.TutorialData)(nil),            // 13: tutorial.TutorialData
	(*resources.ResourceAdjustment)(nil),     // 14: resources.ResourceAdjustment
	(*resources.ResettableResourceData)(nil), // 15: resources.ResettableResourceData
}
var file_player_proto_depIdxs = []int32{
	8,  // 0: player.PlayerData.ID:type_name -> base.ObjectID
	9,  // 1: player.PlayerData.LastActivity:type_name -> base.Timestamp
	10, // 2: player.PlayerData.Decks:type_name -> cards.Decks
	6,  // 3: player.PlayerData.Resources:type_name -> player.PlayerData.ResourcesEntry
	7,  // 4: player.PlayerData.ResettableResources:type_name -> player.PlayerData.ResettableResourcesEntry
	3,  // 5: player.PlayerData.StoryMode:type_name -> player.StoryModeData
	11, // 6: player.PlayerData.ArenaData:type_name -> arena.ArenaData
	12, // 7: player.PlayerData.PlayerStoreData:type_name -> store.PlayerStoreData
	13, // 8: player.PlayerData.TutorialData:type_name -> tutorial.TutorialData
	9,  // 9: player.PlayerData.CreatedAt:type_name -> base.Timestamp
	0,  // 10: player.PlayerData.status:type_name -> player.Status
	1,  // 11: player.PlayerDataResponse.Data:type_name -> player.PlayerData
	8,  // 12: player.DailyRewardData.ID:type_name -> base.ObjectID
	9,  // 13: player.DailyRewardData.LastLoggedAt:type_name -> base.Timestamp
	14, // 14: player.DailyRewardsResponse.AllRewards:type_name -> resources.ResourceAdjustment
	14, // 15: player.DailyRewardsResponse.CurrentRewards:type_name -> resources.ResourceAdjustment
	4,  // 16: player.DailyRewardsResponse.Data:type_name -> player.DailyRewardData
	15, // 17: player.PlayerData.ResettableResourcesEntry.value:type_name -> resources.ResettableResourceData
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_player_proto_init() }
func file_player_proto_init() {
	if File_player_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_player_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryModeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyRewardData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyRewardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_player_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_player_proto_goTypes,
		DependencyIndexes: file_player_proto_depIdxs,
		EnumInfos:         file_player_proto_enumTypes,
		MessageInfos:      file_player_proto_msgTypes,
	}.Build()
	File_player_proto = out.File
	file_player_proto_rawDesc = nil
	file_player_proto_goTypes = nil
	file_player_proto_depIdxs = nil
}
