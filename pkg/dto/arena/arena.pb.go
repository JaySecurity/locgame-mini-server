// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.1
// source: arena.proto

package arena

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	base "locgame-mini-server/pkg/dto/base"
	resources "locgame-mini-server/pkg/dto/resources"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ArenaState int32

const (
	ArenaState_InActive ArenaState = 0
	ArenaState_Active   ArenaState = 1
)

// Enum value maps for ArenaState.
var (
	ArenaState_name = map[int32]string{
		0: "InActive",
		1: "Active",
	}
	ArenaState_value = map[string]int32{
		"InActive": 0,
		"Active":   1,
	}
)

func (x ArenaState) Enum() *ArenaState {
	p := new(ArenaState)
	*p = x
	return p
}

func (x ArenaState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArenaState) Descriptor() protoreflect.EnumDescriptor {
	return file_arena_proto_enumTypes[0].Descriptor()
}

func (ArenaState) Type() protoreflect.EnumType {
	return &file_arena_proto_enumTypes[0]
}

func (x ArenaState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArenaState.Descriptor instead.
func (ArenaState) EnumDescriptor() ([]byte, []int) {
	return file_arena_proto_rawDescGZIP(), []int{0}
}

type TourState int32

const (
	TourState_InActiveTour TourState = 0
	TourState_PaidTour     TourState = 1
	TourState_ActiveTour   TourState = 2
	TourState_LooseTour    TourState = 3
)

// Enum value maps for TourState.
var (
	TourState_name = map[int32]string{
		0: "InActiveTour",
		1: "PaidTour",
		2: "ActiveTour",
		3: "LooseTour",
	}
	TourState_value = map[string]int32{
		"InActiveTour": 0,
		"PaidTour":     1,
		"ActiveTour":   2,
		"LooseTour":    3,
	}
)

func (x TourState) Enum() *TourState {
	p := new(TourState)
	*p = x
	return p
}

func (x TourState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TourState) Descriptor() protoreflect.EnumDescriptor {
	return file_arena_proto_enumTypes[1].Descriptor()
}

func (TourState) Type() protoreflect.EnumType {
	return &file_arena_proto_enumTypes[1]
}

func (x TourState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TourState.Descriptor instead.
func (TourState) EnumDescriptor() ([]byte, []int) {
	return file_arena_proto_rawDescGZIP(), []int{1}
}

type LeagueType int32

const (
	LeagueType_Bronze   LeagueType = 0
	LeagueType_Silver   LeagueType = 1
	LeagueType_Gold     LeagueType = 2
	LeagueType_Platinum LeagueType = 3
	LeagueType_Diamond  LeagueType = 4
	LeagueType_Master   LeagueType = 5
)

// Enum value maps for LeagueType.
var (
	LeagueType_name = map[int32]string{
		0: "Bronze",
		1: "Silver",
		2: "Gold",
		3: "Platinum",
		4: "Diamond",
		5: "Master",
	}
	LeagueType_value = map[string]int32{
		"Bronze":   0,
		"Silver":   1,
		"Gold":     2,
		"Platinum": 3,
		"Diamond":  4,
		"Master":   5,
	}
)

func (x LeagueType) Enum() *LeagueType {
	p := new(LeagueType)
	*p = x
	return p
}

func (x LeagueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LeagueType) Descriptor() protoreflect.EnumDescriptor {
	return file_arena_proto_enumTypes[2].Descriptor()
}

func (LeagueType) Type() protoreflect.EnumType {
	return &file_arena_proto_enumTypes[2]
}

func (x LeagueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LeagueType.Descriptor instead.
func (LeagueType) EnumDescriptor() ([]byte, []int) {
	return file_arena_proto_rawDescGZIP(), []int{2}
}

type TicketType int32

const (
	TicketType_Free TicketType = 0
	TicketType_Paid TicketType = 1
)

// Enum value maps for TicketType.
var (
	TicketType_name = map[int32]string{
		0: "Free",
		1: "Paid",
	}
	TicketType_value = map[string]int32{
		"Free": 0,
		"Paid": 1,
	}
)

func (x TicketType) Enum() *TicketType {
	p := new(TicketType)
	*p = x
	return p
}

func (x TicketType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TicketType) Descriptor() protoreflect.EnumDescriptor {
	return file_arena_proto_enumTypes[3].Descriptor()
}

func (TicketType) Type() protoreflect.EnumType {
	return &file_arena_proto_enumTypes[3]
}

func (x TicketType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TicketType.Descriptor instead.
func (TicketType) EnumDescriptor() ([]byte, []int) {
	return file_arena_proto_rawDescGZIP(), []int{3}
}

type ArenaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating                   int32           `protobuf:"varint,1,opt,name=Rating,proto3" json:"Rating,omitempty" yaml:"Rating,omitempty" bson:"rating,omitempty"`
	MaxRating                int32           `protobuf:"varint,2,opt,name=MaxRating,proto3" json:"MaxRating,omitempty" yaml:"MaxRating,omitempty" bson:"max_rating,omitempty"`
	ClaimedTrophyRoadRewards []int32         `protobuf:"varint,3,rep,packed,name=ClaimedTrophyRoadRewards,proto3" json:"ClaimedTrophyRoadRewards,omitempty" yaml:"ClaimedTrophyRoadRewards,omitempty" bson:"claimed_trophy_road_rewards,omitempty"`
	League                   LeagueType      `protobuf:"varint,4,opt,name=League,proto3,enum=arena.LeagueType" json:"League,omitempty" yaml:"League,omitempty" bson:"league,omitempty"`
	State                    ArenaState      `protobuf:"varint,5,opt,name=State,proto3,enum=arena.ArenaState" json:"State,omitempty" yaml:"State,omitempty" bson:"state,omitempty"`
	TourState                TourState       `protobuf:"varint,6,opt,name=TourState,proto3,enum=arena.TourState" json:"TourState,omitempty" yaml:"TourState,omitempty" bson:"tour_state,omitempty"`
	FinishedBattles          int32           `protobuf:"varint,7,opt,name=FinishedBattles,proto3" json:"FinishedBattles,omitempty" yaml:"FinishedBattles,omitempty" bson:"finished_battles,omitempty"`
	SelectedDeck             string          `protobuf:"bytes,8,opt,name=SelectedDeck,proto3" json:"SelectedDeck,omitempty" yaml:"SelectedDeck,omitempty" bson:"selected_deck,omitempty"`
	SelectedDeckHash         string          `protobuf:"bytes,9,opt,name=SelectedDeckHash,proto3" json:"SelectedDeckHash,omitempty" yaml:"SelectedDeckHash,omitempty" bson:"selected_deck_hash,omitempty"`
	LastSeenBattleLog        *base.Timestamp `protobuf:"bytes,10,opt,name=LastSeenBattleLog,proto3" json:"LastSeenBattleLog,omitempty" yaml:"LastSeenBattleLog,omitempty" bson:"last_seen_battle_log,omitempty"`
	TotalBattles             int32           `protobuf:"varint,11,opt,name=TotalBattles,proto3" json:"TotalBattles,omitempty" yaml:"TotalBattles,omitempty" bson:"total_battles,omitempty"`
}

func (x *ArenaData) Reset() {
	*x = ArenaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arena_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaData) ProtoMessage() {}

func (x *ArenaData) ProtoReflect() protoreflect.Message {
	mi := &file_arena_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaData.ProtoReflect.Descriptor instead.
func (*ArenaData) Descriptor() ([]byte, []int) {
	return file_arena_proto_rawDescGZIP(), []int{0}
}

func (x *ArenaData) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *ArenaData) GetMaxRating() int32 {
	if x != nil {
		return x.MaxRating
	}
	return 0
}

func (x *ArenaData) GetClaimedTrophyRoadRewards() []int32 {
	if x != nil {
		return x.ClaimedTrophyRoadRewards
	}
	return nil
}

func (x *ArenaData) GetLeague() LeagueType {
	if x != nil {
		return x.League
	}
	return LeagueType_Bronze
}

func (x *ArenaData) GetState() ArenaState {
	if x != nil {
		return x.State
	}
	return ArenaState_InActive
}

func (x *ArenaData) GetTourState() TourState {
	if x != nil {
		return x.TourState
	}
	return TourState_InActiveTour
}

func (x *ArenaData) GetFinishedBattles() int32 {
	if x != nil {
		return x.FinishedBattles
	}
	return 0
}

func (x *ArenaData) GetSelectedDeck() string {
	if x != nil {
		return x.SelectedDeck
	}
	return ""
}

func (x *ArenaData) GetSelectedDeckHash() string {
	if x != nil {
		return x.SelectedDeckHash
	}
	return ""
}

func (x *ArenaData) GetLastSeenBattleLog() *base.Timestamp {
	if x != nil {
		return x.LastSeenBattleLog
	}
	return nil
}

func (x *ArenaData) GetTotalBattles() int32 {
	if x != nil {
		return x.TotalBattles
	}
	return 0
}

type ArenaConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketCost     *resources.ResourceAdjustment `protobuf:"bytes,1,opt,name=TicketCost,proto3" json:"TicketCost,omitempty" yaml:"TicketCost,omitempty" bson:"ticket_cost,omitempty"`
	ReviveCost     *resources.ResourceAdjustment `protobuf:"bytes,2,opt,name=ReviveCost,proto3" json:"ReviveCost,omitempty" yaml:"ReviveCost,omitempty" bson:"revive_cost,omitempty"`
	FreeTicketCost *resources.ResourceAdjustment `protobuf:"bytes,3,opt,name=FreeTicketCost,proto3" json:"FreeTicketCost,omitempty" yaml:"FreeTicketCost,omitempty" bson:"free_ticket_cost,omitempty"`
	BattleReward   *resources.ResourceAdjustment `protobuf:"bytes,4,opt,name=BattleReward,proto3" json:"BattleReward,omitempty" yaml:"BattleReward,omitempty" bson:"battle_reward,omitempty"`
}

func (x *ArenaConfig) Reset() {
	*x = ArenaConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arena_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaConfig) ProtoMessage() {}

func (x *ArenaConfig) ProtoReflect() protoreflect.Message {
	mi := &file_arena_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaConfig.ProtoReflect.Descriptor instead.
func (*ArenaConfig) Descriptor() ([]byte, []int) {
	return file_arena_proto_rawDescGZIP(), []int{1}
}

func (x *ArenaConfig) GetTicketCost() *resources.ResourceAdjustment {
	if x != nil {
		return x.TicketCost
	}
	return nil
}

func (x *ArenaConfig) GetReviveCost() *resources.ResourceAdjustment {
	if x != nil {
		return x.ReviveCost
	}
	return nil
}

func (x *ArenaConfig) GetFreeTicketCost() *resources.ResourceAdjustment {
	if x != nil {
		return x.FreeTicketCost
	}
	return nil
}

func (x *ArenaConfig) GetBattleReward() *resources.ResourceAdjustment {
	if x != nil {
		return x.BattleReward
	}
	return nil
}

type EnterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketType TicketType `protobuf:"varint,1,opt,name=TicketType,proto3,enum=arena.TicketType" json:"TicketType,omitempty" yaml:"TicketType,omitempty" bson:"ticket_type,omitempty"`
}

func (x *EnterRequest) Reset() {
	*x = EnterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arena_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterRequest) ProtoMessage() {}

func (x *EnterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arena_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterRequest.ProtoReflect.Descriptor instead.
func (*EnterRequest) Descriptor() ([]byte, []int) {
	return file_arena_proto_rawDescGZIP(), []int{2}
}

func (x *EnterRequest) GetTicketType() TicketType {
	if x != nil {
		return x.TicketType
	}
	return TicketType_Free
}

type EnterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArenaData *ArenaData                      `protobuf:"bytes,1,opt,name=ArenaData,proto3" json:"ArenaData,omitempty" yaml:"ArenaData,omitempty" bson:"arena_data,omitempty"`
	Cost      []*resources.ResourceAdjustment `protobuf:"bytes,2,rep,name=Cost,proto3" json:"Cost,omitempty" yaml:"Cost,omitempty" bson:"cost,omitempty"`
}

func (x *EnterResponse) Reset() {
	*x = EnterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arena_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterResponse) ProtoMessage() {}

func (x *EnterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arena_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterResponse.ProtoReflect.Descriptor instead.
func (*EnterResponse) Descriptor() ([]byte, []int) {
	return file_arena_proto_rawDescGZIP(), []int{3}
}

func (x *EnterResponse) GetArenaData() *ArenaData {
	if x != nil {
		return x.ArenaData
	}
	return nil
}

func (x *EnterResponse) GetCost() []*resources.ResourceAdjustment {
	if x != nil {
		return x.Cost
	}
	return nil
}

type SetAttackDeckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelectedDeck string `protobuf:"bytes,1,opt,name=SelectedDeck,proto3" json:"SelectedDeck,omitempty" yaml:"SelectedDeck,omitempty" bson:"selected_deck,omitempty"`
}

func (x *SetAttackDeckRequest) Reset() {
	*x = SetAttackDeckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arena_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAttackDeckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAttackDeckRequest) ProtoMessage() {}

func (x *SetAttackDeckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arena_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAttackDeckRequest.ProtoReflect.Descriptor instead.
func (*SetAttackDeckRequest) Descriptor() ([]byte, []int) {
	return file_arena_proto_rawDescGZIP(), []int{4}
}

func (x *SetAttackDeckRequest) GetSelectedDeck() string {
	if x != nil {
		return x.SelectedDeck
	}
	return ""
}

type FindOpponentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FindOpponentRequest) Reset() {
	*x = FindOpponentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arena_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOpponentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOpponentRequest) ProtoMessage() {}

func (x *FindOpponentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arena_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOpponentRequest.ProtoReflect.Descriptor instead.
func (*FindOpponentRequest) Descriptor() ([]byte, []int) {
	return file_arena_proto_rawDescGZIP(), []int{5}
}

type ArenaLeaderboardPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       *base.ObjectID `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty" yaml:"ID,omitempty" bson:"_id,omitempty"`
	Rank     int32          `protobuf:"varint,2,opt,name=Rank,proto3" json:"Rank,omitempty" yaml:"Rank,omitempty" bson:"rank,omitempty"`
	AvatarID string         `protobuf:"bytes,3,opt,name=AvatarID,proto3" json:"AvatarID,omitempty" yaml:"AvatarID,omitempty" bson:"avatar_id,omitempty"`
	League   int32          `protobuf:"varint,4,opt,name=League,proto3" json:"League,omitempty" yaml:"League,omitempty" bson:"league,omitempty"`
	Name     string         `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name,omitempty" yaml:"Name,omitempty" bson:"name,omitempty"`
	Rating   int32          `protobuf:"varint,6,opt,name=Rating,proto3" json:"Rating,omitempty" yaml:"Rating,omitempty" bson:"rating,omitempty"`
}

func (x *ArenaLeaderboardPlayer) Reset() {
	*x = ArenaLeaderboardPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arena_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaLeaderboardPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaLeaderboardPlayer) ProtoMessage() {}

func (x *ArenaLeaderboardPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_arena_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaLeaderboardPlayer.ProtoReflect.Descriptor instead.
func (*ArenaLeaderboardPlayer) Descriptor() ([]byte, []int) {
	return file_arena_proto_rawDescGZIP(), []int{6}
}

func (x *ArenaLeaderboardPlayer) GetID() *base.ObjectID {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *ArenaLeaderboardPlayer) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *ArenaLeaderboardPlayer) GetAvatarID() string {
	if x != nil {
		return x.AvatarID
	}
	return ""
}

func (x *ArenaLeaderboardPlayer) GetLeague() int32 {
	if x != nil {
		return x.League
	}
	return 0
}

func (x *ArenaLeaderboardPlayer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ArenaLeaderboardPlayer) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

type ArenaMemberData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       *base.ObjectID `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty" yaml:"ID,omitempty" bson:"_id,omitempty"`
	Name     string         `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty" yaml:"Name,omitempty" bson:"name,omitempty"`
	AvatarID string         `protobuf:"bytes,3,opt,name=AvatarID,proto3" json:"AvatarID,omitempty" yaml:"AvatarID,omitempty" bson:"avatar_id,omitempty"`
	League   LeagueType     `protobuf:"varint,5,opt,name=League,proto3,enum=arena.LeagueType" json:"League,omitempty" yaml:"League,omitempty" bson:"league,omitempty"`
}

func (x *ArenaMemberData) Reset() {
	*x = ArenaMemberData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arena_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaMemberData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaMemberData) ProtoMessage() {}

func (x *ArenaMemberData) ProtoReflect() protoreflect.Message {
	mi := &file_arena_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaMemberData.ProtoReflect.Descriptor instead.
func (*ArenaMemberData) Descriptor() ([]byte, []int) {
	return file_arena_proto_rawDescGZIP(), []int{7}
}

func (x *ArenaMemberData) GetID() *base.ObjectID {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *ArenaMemberData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ArenaMemberData) GetAvatarID() string {
	if x != nil {
		return x.AvatarID
	}
	return ""
}

func (x *ArenaMemberData) GetLeague() LeagueType {
	if x != nil {
		return x.League
	}
	return LeagueType_Bronze
}

type ArenaPlayerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          *base.ObjectID `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty" yaml:"ID,omitempty" bson:"_id,omitempty"`
	Name        string         `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty" yaml:"Name,omitempty" bson:"name,omitempty"`
	AvatarID    string         `protobuf:"bytes,3,opt,name=AvatarID,proto3" json:"AvatarID,omitempty" yaml:"AvatarID,omitempty" bson:"avatar_id,omitempty"`
	Rating      int32          `protobuf:"varint,4,opt,name=Rating,proto3" json:"Rating,omitempty" yaml:"Rating,omitempty" bson:"rating,omitempty"`
	League      LeagueType     `protobuf:"varint,5,opt,name=League,proto3,enum=arena.LeagueType" json:"League,omitempty" yaml:"League,omitempty" bson:"league,omitempty"`
	DefenseDeck []string       `protobuf:"bytes,6,rep,name=DefenseDeck,proto3" json:"DefenseDeck,omitempty" yaml:"DefenseDeck,omitempty" bson:"defense_deck,omitempty"`
}

func (x *ArenaPlayerData) Reset() {
	*x = ArenaPlayerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arena_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaPlayerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaPlayerData) ProtoMessage() {}

func (x *ArenaPlayerData) ProtoReflect() protoreflect.Message {
	mi := &file_arena_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaPlayerData.ProtoReflect.Descriptor instead.
func (*ArenaPlayerData) Descriptor() ([]byte, []int) {
	return file_arena_proto_rawDescGZIP(), []int{8}
}

func (x *ArenaPlayerData) GetID() *base.ObjectID {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *ArenaPlayerData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ArenaPlayerData) GetAvatarID() string {
	if x != nil {
		return x.AvatarID
	}
	return ""
}

func (x *ArenaPlayerData) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *ArenaPlayerData) GetLeague() LeagueType {
	if x != nil {
		return x.League
	}
	return LeagueType_Bronze
}

func (x *ArenaPlayerData) GetDefenseDeck() []string {
	if x != nil {
		return x.DefenseDeck
	}
	return nil
}

type ArenaLeaderboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Leaderboard  []*ArenaLeaderboardPlayer `protobuf:"bytes,1,rep,name=Leaderboard,proto3" json:"Leaderboard,omitempty" yaml:"Leaderboard,omitempty" bson:"leaderboard,omitempty"`
	TotalMembers int64                     `protobuf:"varint,2,opt,name=TotalMembers,proto3" json:"TotalMembers,omitempty" yaml:"TotalMembers,omitempty" bson:"total_members,omitempty"`
}

func (x *ArenaLeaderboardResponse) Reset() {
	*x = ArenaLeaderboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arena_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaLeaderboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaLeaderboardResponse) ProtoMessage() {}

func (x *ArenaLeaderboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arena_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaLeaderboardResponse.ProtoReflect.Descriptor instead.
func (*ArenaLeaderboardResponse) Descriptor() ([]byte, []int) {
	return file_arena_proto_rawDescGZIP(), []int{9}
}

func (x *ArenaLeaderboardResponse) GetLeaderboard() []*ArenaLeaderboardPlayer {
	if x != nil {
		return x.Leaderboard
	}
	return nil
}

func (x *ArenaLeaderboardResponse) GetTotalMembers() int64 {
	if x != nil {
		return x.TotalMembers
	}
	return 0
}

type LeagueData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   LeagueType        `protobuf:"varint,1,opt,name=Type,proto3,enum=arena.LeagueType" json:"Type,omitempty" yaml:"Type,omitempty" bson:"type,omitempty"`
	Rating *LeagueRatingData `protobuf:"bytes,2,opt,name=Rating,proto3" json:"Rating,omitempty" yaml:"Rating,omitempty" bson:"rating,omitempty"`
}

func (x *LeagueData) Reset() {
	*x = LeagueData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arena_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeagueData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeagueData) ProtoMessage() {}

func (x *LeagueData) ProtoReflect() protoreflect.Message {
	mi := &file_arena_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeagueData.ProtoReflect.Descriptor instead.
func (*LeagueData) Descriptor() ([]byte, []int) {
	return file_arena_proto_rawDescGZIP(), []int{10}
}

func (x *LeagueData) GetType() LeagueType {
	if x != nil {
		return x.Type
	}
	return LeagueType_Bronze
}

func (x *LeagueData) GetRating() *LeagueRatingData {
	if x != nil {
		return x.Rating
	}
	return nil
}

type LeagueRatingData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min int32 `protobuf:"varint,1,opt,name=Min,proto3" json:"Min,omitempty" yaml:"Min,omitempty" bson:"min,omitempty"`
	Max int32 `protobuf:"varint,2,opt,name=Max,proto3" json:"Max,omitempty" yaml:"Max,omitempty" bson:"max,omitempty"`
}

func (x *LeagueRatingData) Reset() {
	*x = LeagueRatingData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arena_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeagueRatingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeagueRatingData) ProtoMessage() {}

func (x *LeagueRatingData) ProtoReflect() protoreflect.Message {
	mi := &file_arena_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeagueRatingData.ProtoReflect.Descriptor instead.
func (*LeagueRatingData) Descriptor() ([]byte, []int) {
	return file_arena_proto_rawDescGZIP(), []int{11}
}

func (x *LeagueRatingData) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *LeagueRatingData) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

type ArenaRatingChanges struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpponentID          *base.ObjectID `protobuf:"bytes,1,opt,name=OpponentID,proto3" json:"OpponentID,omitempty" yaml:"OpponentID,omitempty" bson:"opponent_id,omitempty"`
	OpponentDeltaRating int32          `protobuf:"varint,2,opt,name=OpponentDeltaRating,proto3" json:"OpponentDeltaRating,omitempty" yaml:"OpponentDeltaRating,omitempty" bson:"opponent_delta_rating,omitempty"`
}

func (x *ArenaRatingChanges) Reset() {
	*x = ArenaRatingChanges{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arena_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaRatingChanges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaRatingChanges) ProtoMessage() {}

func (x *ArenaRatingChanges) ProtoReflect() protoreflect.Message {
	mi := &file_arena_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaRatingChanges.ProtoReflect.Descriptor instead.
func (*ArenaRatingChanges) Descriptor() ([]byte, []int) {
	return file_arena_proto_rawDescGZIP(), []int{12}
}

func (x *ArenaRatingChanges) GetOpponentID() *base.ObjectID {
	if x != nil {
		return x.OpponentID
	}
	return nil
}

func (x *ArenaRatingChanges) GetOpponentDeltaRating() int32 {
	if x != nil {
		return x.OpponentDeltaRating
	}
	return 0
}

type ArenaBattleLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player              *ArenaMemberData `protobuf:"bytes,1,opt,name=Player,proto3" json:"Player,omitempty" yaml:"Player,omitempty" bson:"player,omitempty"`
	Opponent            *ArenaMemberData `protobuf:"bytes,2,opt,name=Opponent,proto3" json:"Opponent,omitempty" yaml:"Opponent,omitempty" bson:"opponent,omitempty"`
	PlayerDeltaRating   int32            `protobuf:"varint,3,opt,name=PlayerDeltaRating,proto3" json:"PlayerDeltaRating,omitempty" yaml:"PlayerDeltaRating,omitempty" bson:"player_delta_rating,omitempty"`
	OpponentDeltaRating int32            `protobuf:"varint,4,opt,name=OpponentDeltaRating,proto3" json:"OpponentDeltaRating,omitempty" yaml:"OpponentDeltaRating,omitempty" bson:"opponent_delta_rating,omitempty"`
	CreatedAt           *base.Timestamp  `protobuf:"bytes,6,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" yaml:"CreatedAt,omitempty" bson:"created_at,omitempty"`
}

func (x *ArenaBattleLog) Reset() {
	*x = ArenaBattleLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arena_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaBattleLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaBattleLog) ProtoMessage() {}

func (x *ArenaBattleLog) ProtoReflect() protoreflect.Message {
	mi := &file_arena_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaBattleLog.ProtoReflect.Descriptor instead.
func (*ArenaBattleLog) Descriptor() ([]byte, []int) {
	return file_arena_proto_rawDescGZIP(), []int{13}
}

func (x *ArenaBattleLog) GetPlayer() *ArenaMemberData {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *ArenaBattleLog) GetOpponent() *ArenaMemberData {
	if x != nil {
		return x.Opponent
	}
	return nil
}

func (x *ArenaBattleLog) GetPlayerDeltaRating() int32 {
	if x != nil {
		return x.PlayerDeltaRating
	}
	return 0
}

func (x *ArenaBattleLog) GetOpponentDeltaRating() int32 {
	if x != nil {
		return x.OpponentDeltaRating
	}
	return 0
}

func (x *ArenaBattleLog) GetCreatedAt() *base.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type ArenaMatchResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rewards     []*resources.ResourceAdjustment `protobuf:"bytes,1,rep,name=Rewards,proto3" json:"Rewards,omitempty" yaml:"Rewards,omitempty" bson:"rewards,omitempty"`
	DeltaRating int32                           `protobuf:"varint,3,opt,name=DeltaRating,proto3" json:"DeltaRating,omitempty" yaml:"DeltaRating,omitempty" bson:"delta_rating,omitempty"`
	OldRating   int32                           `protobuf:"varint,4,opt,name=OldRating,proto3" json:"OldRating,omitempty" yaml:"OldRating,omitempty" bson:"old_rating,omitempty"`
	NewRating   int32                           `protobuf:"varint,5,opt,name=NewRating,proto3" json:"NewRating,omitempty" yaml:"NewRating,omitempty" bson:"new_rating,omitempty"`
}

func (x *ArenaMatchResult) Reset() {
	*x = ArenaMatchResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arena_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaMatchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaMatchResult) ProtoMessage() {}

func (x *ArenaMatchResult) ProtoReflect() protoreflect.Message {
	mi := &file_arena_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaMatchResult.ProtoReflect.Descriptor instead.
func (*ArenaMatchResult) Descriptor() ([]byte, []int) {
	return file_arena_proto_rawDescGZIP(), []int{14}
}

func (x *ArenaMatchResult) GetRewards() []*resources.ResourceAdjustment {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *ArenaMatchResult) GetDeltaRating() int32 {
	if x != nil {
		return x.DeltaRating
	}
	return 0
}

func (x *ArenaMatchResult) GetOldRating() int32 {
	if x != nil {
		return x.OldRating
	}
	return 0
}

func (x *ArenaMatchResult) GetNewRating() int32 {
	if x != nil {
		return x.NewRating
	}
	return 0
}

type ArenaBattleLogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logs []*ArenaBattleLog `protobuf:"bytes,1,rep,name=Logs,proto3" json:"Logs,omitempty" yaml:"Logs,omitempty" bson:"logs,omitempty"`
}

func (x *ArenaBattleLogs) Reset() {
	*x = ArenaBattleLogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arena_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaBattleLogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaBattleLogs) ProtoMessage() {}

func (x *ArenaBattleLogs) ProtoReflect() protoreflect.Message {
	mi := &file_arena_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaBattleLogs.ProtoReflect.Descriptor instead.
func (*ArenaBattleLogs) Descriptor() ([]byte, []int) {
	return file_arena_proto_rawDescGZIP(), []int{15}
}

func (x *ArenaBattleLogs) GetLogs() []*ArenaBattleLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

type ArenaTourRewardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rewards   []*resources.ResourceAdjustment `protobuf:"bytes,1,rep,name=Rewards,proto3" json:"Rewards,omitempty" yaml:"Rewards,omitempty" bson:"rewards,omitempty"`
	ArenaData *ArenaData                      `protobuf:"bytes,2,opt,name=ArenaData,proto3" json:"ArenaData,omitempty" yaml:"ArenaData,omitempty" bson:"arena_data,omitempty"`
}

func (x *ArenaTourRewardsResponse) Reset() {
	*x = ArenaTourRewardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arena_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArenaTourRewardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArenaTourRewardsResponse) ProtoMessage() {}

func (x *ArenaTourRewardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arena_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArenaTourRewardsResponse.ProtoReflect.Descriptor instead.
func (*ArenaTourRewardsResponse) Descriptor() ([]byte, []int) {
	return file_arena_proto_rawDescGZIP(), []int{16}
}

func (x *ArenaTourRewardsResponse) GetRewards() []*resources.ResourceAdjustment {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *ArenaTourRewardsResponse) GetArenaData() *ArenaData {
	if x != nil {
		return x.ArenaData
	}
	return nil
}

type ClaimTrophyRoadRewardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardID int32 `protobuf:"varint,1,opt,name=RewardID,proto3" json:"RewardID,omitempty" yaml:"RewardID,omitempty" bson:"reward_id,omitempty"`
}

func (x *ClaimTrophyRoadRewardRequest) Reset() {
	*x = ClaimTrophyRoadRewardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arena_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimTrophyRoadRewardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimTrophyRoadRewardRequest) ProtoMessage() {}

func (x *ClaimTrophyRoadRewardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arena_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimTrophyRoadRewardRequest.ProtoReflect.Descriptor instead.
func (*ClaimTrophyRoadRewardRequest) Descriptor() ([]byte, []int) {
	return file_arena_proto_rawDescGZIP(), []int{17}
}

func (x *ClaimTrophyRoadRewardRequest) GetRewardID() int32 {
	if x != nil {
		return x.RewardID
	}
	return 0
}

type ClaimTrophyRoadRewardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reward         []*resources.ResourceAdjustment `protobuf:"bytes,1,rep,name=Reward,proto3" json:"Reward,omitempty" yaml:"Reward,omitempty" bson:"reward,omitempty"`
	ClaimedRewards []int32                         `protobuf:"varint,2,rep,packed,name=ClaimedRewards,proto3" json:"ClaimedRewards,omitempty" yaml:"ClaimedRewards,omitempty" bson:"claimed_rewards,omitempty"`
}

func (x *ClaimTrophyRoadRewardResponse) Reset() {
	*x = ClaimTrophyRoadRewardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arena_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimTrophyRoadRewardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimTrophyRoadRewardResponse) ProtoMessage() {}

func (x *ClaimTrophyRoadRewardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arena_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimTrophyRoadRewardResponse.ProtoReflect.Descriptor instead.
func (*ClaimTrophyRoadRewardResponse) Descriptor() ([]byte, []int) {
	return file_arena_proto_rawDescGZIP(), []int{18}
}

func (x *ClaimTrophyRoadRewardResponse) GetReward() []*resources.ResourceAdjustment {
	if x != nil {
		return x.Reward
	}
	return nil
}

func (x *ClaimTrophyRoadRewardResponse) GetClaimedRewards() []int32 {
	if x != nil {
		return x.ClaimedRewards
	}
	return nil
}

type TrophyRoadRewards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      int32                           `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty" yaml:"ID,omitempty" bson:"_id,omitempty"`
	Rating  int32                           `protobuf:"varint,2,opt,name=Rating,proto3" json:"Rating,omitempty" yaml:"Rating,omitempty" bson:"rating,omitempty"`
	Rewards []*resources.ResourceAdjustment `protobuf:"bytes,3,rep,name=Rewards,proto3" json:"Rewards,omitempty" yaml:"Rewards,omitempty" bson:"rewards,omitempty"`
}

func (x *TrophyRoadRewards) Reset() {
	*x = TrophyRoadRewards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arena_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrophyRoadRewards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrophyRoadRewards) ProtoMessage() {}

func (x *TrophyRoadRewards) ProtoReflect() protoreflect.Message {
	mi := &file_arena_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrophyRoadRewards.ProtoReflect.Descriptor instead.
func (*TrophyRoadRewards) Descriptor() ([]byte, []int) {
	return file_arena_proto_rawDescGZIP(), []int{19}
}

func (x *TrophyRoadRewards) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TrophyRoadRewards) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *TrophyRoadRewards) GetRewards() []*resources.ResourceAdjustment {
	if x != nil {
		return x.Rewards
	}
	return nil
}

var File_arena_proto protoreflect.FileDescriptor

var file_arena_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61,
	0x72, 0x65, 0x6e, 0x61, 0x1a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xde, 0x03, 0x0a, 0x09, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x16, 0x0a, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x61, 0x78, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4d, 0x61, 0x78, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x0a, 0x18, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64,
	0x54, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x52, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x18, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64,
	0x54, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x52, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x29, 0x0a, 0x06, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x11, 0x2e, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x27, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x61, 0x72,
	0x65, 0x6e, 0x61, 0x2e, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x54, 0x6f, 0x75, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x61, 0x72, 0x65, 0x6e, 0x61,
	0x2e, 0x54, 0x6f, 0x75, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x54, 0x6f, 0x75, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x65, 0x63, 0x6b, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44,
	0x65, 0x63, 0x6b, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44,
	0x65, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x65, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x3d, 0x0a, 0x11, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x4c, 0x6f, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x4c, 0x61, 0x73,
	0x74, 0x53, 0x65, 0x65, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x22,
	0x0a, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x73, 0x22, 0x95, 0x02, 0x0a, 0x0b, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x3d, 0x0a, 0x0a, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x73,
	0x74, 0x12, 0x3d, 0x0a, 0x0a, 0x52, 0x65, 0x76, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x52, 0x65, 0x76, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x73, 0x74,
	0x12, 0x45, 0x0a, 0x0e, 0x46, 0x72, 0x65, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x6a,
	0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0e, 0x46, 0x72, 0x65, 0x65, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0c, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x41, 0x0a, 0x0c, 0x45, 0x6e,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x72, 0x0a,
	0x0d, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x09, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x2e, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x09, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x31,
	0x0a, 0x04, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x43, 0x6f, 0x73,
	0x74, 0x22, 0x3a, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x44, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x65, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x65, 0x63, 0x6b, 0x22, 0x15, 0x0a,
	0x13, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0xac, 0x01, 0x0a, 0x16, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x1e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x52,
	0x61, 0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x22, 0x8c, 0x01, 0x0a, 0x0f, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x44, 0x12, 0x29, 0x0a, 0x06, 0x4c, 0x65, 0x61, 0x67, 0x75,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x2e,
	0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x4c, 0x65, 0x61, 0x67,
	0x75, 0x65, 0x22, 0xc6, 0x01, 0x0a, 0x0f, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x44, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x29,
	0x0a, 0x06, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x06, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x66,
	0x65, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x44, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x63, 0x6b, 0x22, 0x7f, 0x0a, 0x18, 0x41,
	0x72, 0x65, 0x6e, 0x61, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61,
	0x72, 0x65, 0x6e, 0x61, 0x2e, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0b, 0x4c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x64, 0x0a, 0x0a,
	0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x61, 0x72, 0x65, 0x6e, 0x61,
	0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x2f, 0x0a, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x22, 0x36, 0x0a, 0x10, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x4d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x61, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x4d, 0x61, 0x78, 0x22, 0x76, 0x0a, 0x12, 0x41, 0x72,
	0x65, 0x6e, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x12, 0x2e, 0x0a, 0x0a, 0x4f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x52, 0x0a, 0x4f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x30, 0x0a, 0x13, 0x4f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x4f,
	0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x22, 0x83, 0x02, 0x0a, 0x0e, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x2e, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x2e, 0x41, 0x72,
	0x65, 0x6e, 0x61, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x08, 0x4f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x2e,
	0x41, 0x72, 0x65, 0x6e, 0x61, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x08, 0x4f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x30, 0x0a, 0x13, 0x4f, 0x70, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x4f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x6c, 0x74, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2d, 0x0a, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x10, 0x41, 0x72, 0x65,
	0x6e, 0x61, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x37, 0x0a,
	0x07, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x44, 0x65, 0x6c,
	0x74, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x6c, 0x64, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4f, 0x6c, 0x64,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4e, 0x65, 0x77, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x22, 0x3c, 0x0a, 0x0f, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x2e, 0x41, 0x72,
	0x65, 0x6e, 0x61, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x4c, 0x6f,
	0x67, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x18, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x54, 0x6f, 0x75, 0x72,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x37, 0x0a, 0x07, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x07, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x41, 0x72, 0x65, 0x6e,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x72,
	0x65, 0x6e, 0x61, 0x2e, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x41,
	0x72, 0x65, 0x6e, 0x61, 0x44, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x0a, 0x1c, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x54, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x52, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x49, 0x44, 0x22, 0x7e, 0x0a, 0x1d, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x72, 0x6f,
	0x70, 0x68, 0x79, 0x52, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x26, 0x0a, 0x0e,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x0e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x22, 0x74, 0x0a, 0x11, 0x54, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x52, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x37, 0x0a, 0x07, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x07, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2a, 0x26, 0x0a, 0x0a, 0x41, 0x72,
	0x65, 0x6e, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x6e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x10, 0x01, 0x2a, 0x4a, 0x0a, 0x09, 0x54, 0x6f, 0x75, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x10, 0x0a, 0x0c, 0x49, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x61, 0x69, 0x64, 0x54, 0x6f, 0x75, 0x72, 0x10, 0x01, 0x12,
	0x0e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x10, 0x02, 0x12,
	0x0d, 0x0a, 0x09, 0x4c, 0x6f, 0x6f, 0x73, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x10, 0x03, 0x2a, 0x55,
	0x0a, 0x0a, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06,
	0x42, 0x72, 0x6f, 0x6e, 0x7a, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x69, 0x6c, 0x76,
	0x65, 0x72, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x6f, 0x6c, 0x64, 0x10, 0x02, 0x12, 0x0c,
	0x0a, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x75, 0x6d, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07,
	0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x10, 0x05, 0x2a, 0x20, 0x0a, 0x0a, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x72, 0x65, 0x65, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x50, 0x61, 0x69, 0x64, 0x10, 0x01, 0x42, 0x34, 0x5a, 0x21, 0x6c, 0x6f, 0x63, 0x67, 0x61,
	0x6d, 0x65, 0x2d, 0x6d, 0x69, 0x6e, 0x69, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x64, 0x74, 0x6f, 0x2f, 0x61, 0x72, 0x65, 0x6e, 0x61, 0xaa, 0x02, 0x0e, 0x4c,
	0x6f, 0x43, 0x2e, 0x44, 0x54, 0x4f, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_arena_proto_rawDescOnce sync.Once
	file_arena_proto_rawDescData = file_arena_proto_rawDesc
)

func file_arena_proto_rawDescGZIP() []byte {
	file_arena_proto_rawDescOnce.Do(func() {
		file_arena_proto_rawDescData = protoimpl.X.CompressGZIP(file_arena_proto_rawDescData)
	})
	return file_arena_proto_rawDescData
}

var file_arena_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_arena_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_arena_proto_goTypes = []any{
	(ArenaState)(0),                       // 0: arena.ArenaState
	(TourState)(0),                        // 1: arena.TourState
	(LeagueType)(0),                       // 2: arena.LeagueType
	(TicketType)(0),                       // 3: arena.TicketType
	(*ArenaData)(nil),                     // 4: arena.ArenaData
	(*ArenaConfig)(nil),                   // 5: arena.ArenaConfig
	(*EnterRequest)(nil),                  // 6: arena.EnterRequest
	(*EnterResponse)(nil),                 // 7: arena.EnterResponse
	(*SetAttackDeckRequest)(nil),          // 8: arena.SetAttackDeckRequest
	(*FindOpponentRequest)(nil),           // 9: arena.FindOpponentRequest
	(*ArenaLeaderboardPlayer)(nil),        // 10: arena.ArenaLeaderboardPlayer
	(*ArenaMemberData)(nil),               // 11: arena.ArenaMemberData
	(*ArenaPlayerData)(nil),               // 12: arena.ArenaPlayerData
	(*ArenaLeaderboardResponse)(nil),      // 13: arena.ArenaLeaderboardResponse
	(*LeagueData)(nil),                    // 14: arena.LeagueData
	(*LeagueRatingData)(nil),              // 15: arena.LeagueRatingData
	(*ArenaRatingChanges)(nil),            // 16: arena.ArenaRatingChanges
	(*ArenaBattleLog)(nil),                // 17: arena.ArenaBattleLog
	(*ArenaMatchResult)(nil),              // 18: arena.ArenaMatchResult
	(*ArenaBattleLogs)(nil),               // 19: arena.ArenaBattleLogs
	(*ArenaTourRewardsResponse)(nil),      // 20: arena.ArenaTourRewardsResponse
	(*ClaimTrophyRoadRewardRequest)(nil),  // 21: arena.ClaimTrophyRoadRewardRequest
	(*ClaimTrophyRoadRewardResponse)(nil), // 22: arena.ClaimTrophyRoadRewardResponse
	(*TrophyRoadRewards)(nil),             // 23: arena.TrophyRoadRewards
	(*base.Timestamp)(nil),                // 24: base.Timestamp
	(*resources.ResourceAdjustment)(nil),  // 25: resources.ResourceAdjustment
	(*base.ObjectID)(nil),                 // 26: base.ObjectID
}
var file_arena_proto_depIdxs = []int32{
	2,  // 0: arena.ArenaData.League:type_name -> arena.LeagueType
	0,  // 1: arena.ArenaData.State:type_name -> arena.ArenaState
	1,  // 2: arena.ArenaData.TourState:type_name -> arena.TourState
	24, // 3: arena.ArenaData.LastSeenBattleLog:type_name -> base.Timestamp
	25, // 4: arena.ArenaConfig.TicketCost:type_name -> resources.ResourceAdjustment
	25, // 5: arena.ArenaConfig.ReviveCost:type_name -> resources.ResourceAdjustment
	25, // 6: arena.ArenaConfig.FreeTicketCost:type_name -> resources.ResourceAdjustment
	25, // 7: arena.ArenaConfig.BattleReward:type_name -> resources.ResourceAdjustment
	3,  // 8: arena.EnterRequest.TicketType:type_name -> arena.TicketType
	4,  // 9: arena.EnterResponse.ArenaData:type_name -> arena.ArenaData
	25, // 10: arena.EnterResponse.Cost:type_name -> resources.ResourceAdjustment
	26, // 11: arena.ArenaLeaderboardPlayer.ID:type_name -> base.ObjectID
	26, // 12: arena.ArenaMemberData.ID:type_name -> base.ObjectID
	2,  // 13: arena.ArenaMemberData.League:type_name -> arena.LeagueType
	26, // 14: arena.ArenaPlayerData.ID:type_name -> base.ObjectID
	2,  // 15: arena.ArenaPlayerData.League:type_name -> arena.LeagueType
	10, // 16: arena.ArenaLeaderboardResponse.Leaderboard:type_name -> arena.ArenaLeaderboardPlayer
	2,  // 17: arena.LeagueData.Type:type_name -> arena.LeagueType
	15, // 18: arena.LeagueData.Rating:type_name -> arena.LeagueRatingData
	26, // 19: arena.ArenaRatingChanges.OpponentID:type_name -> base.ObjectID
	11, // 20: arena.ArenaBattleLog.Player:type_name -> arena.ArenaMemberData
	11, // 21: arena.ArenaBattleLog.Opponent:type_name -> arena.ArenaMemberData
	24, // 22: arena.ArenaBattleLog.CreatedAt:type_name -> base.Timestamp
	25, // 23: arena.ArenaMatchResult.Rewards:type_name -> resources.ResourceAdjustment
	17, // 24: arena.ArenaBattleLogs.Logs:type_name -> arena.ArenaBattleLog
	25, // 25: arena.ArenaTourRewardsResponse.Rewards:type_name -> resources.ResourceAdjustment
	4,  // 26: arena.ArenaTourRewardsResponse.ArenaData:type_name -> arena.ArenaData
	25, // 27: arena.ClaimTrophyRoadRewardResponse.Reward:type_name -> resources.ResourceAdjustment
	25, // 28: arena.TrophyRoadRewards.Rewards:type_name -> resources.ResourceAdjustment
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_arena_proto_init() }
func file_arena_proto_init() {
	if File_arena_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_arena_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arena_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arena_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*EnterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arena_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*EnterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arena_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*SetAttackDeckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arena_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*FindOpponentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arena_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaLeaderboardPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arena_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaMemberData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arena_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaPlayerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arena_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaLeaderboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arena_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*LeagueData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arena_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*LeagueRatingData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arena_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaRatingChanges); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arena_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaBattleLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arena_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaMatchResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arena_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaBattleLogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arena_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ArenaTourRewardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arena_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ClaimTrophyRoadRewardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arena_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ClaimTrophyRoadRewardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arena_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*TrophyRoadRewards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_arena_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_arena_proto_goTypes,
		DependencyIndexes: file_arena_proto_depIdxs,
		EnumInfos:         file_arena_proto_enumTypes,
		MessageInfos:      file_arena_proto_msgTypes,
	}.Build()
	File_arena_proto = out.File
	file_arena_proto_rawDesc = nil
	file_arena_proto_goTypes = nil
	file_arena_proto_depIdxs = nil
}
