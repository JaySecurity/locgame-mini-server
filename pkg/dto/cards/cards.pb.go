// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.1
// source: cards.proto

package cards

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	base "locgame-mini-server/pkg/dto/base"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GameRarity int32

const (
	GameRarity_NoneGameRarity GameRarity = 0
	GameRarity_Common         GameRarity = 1
	GameRarity_Uncommon       GameRarity = 2
	GameRarity_Rare           GameRarity = 3
	GameRarity_Epic           GameRarity = 4
)

// Enum value maps for GameRarity.
var (
	GameRarity_name = map[int32]string{
		0: "NoneGameRarity",
		1: "Common",
		2: "Uncommon",
		3: "Rare",
		4: "Epic",
	}
	GameRarity_value = map[string]int32{
		"NoneGameRarity": 0,
		"Common":         1,
		"Uncommon":       2,
		"Rare":           3,
		"Epic":           4,
	}
)

func (x GameRarity) Enum() *GameRarity {
	p := new(GameRarity)
	*p = x
	return p
}

func (x GameRarity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameRarity) Descriptor() protoreflect.EnumDescriptor {
	return file_cards_proto_enumTypes[0].Descriptor()
}

func (GameRarity) Type() protoreflect.EnumType {
	return &file_cards_proto_enumTypes[0]
}

func (x GameRarity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameRarity.Descriptor instead.
func (GameRarity) EnumDescriptor() ([]byte, []int) {
	return file_cards_proto_rawDescGZIP(), []int{0}
}

type VisualRarity int32

const (
	VisualRarity_NoneVisualRarity VisualRarity = 0
	VisualRarity_Bronze           VisualRarity = 1
	VisualRarity_Silver           VisualRarity = 2
	VisualRarity_Gold             VisualRarity = 3
	VisualRarity_Platinum         VisualRarity = 4
	VisualRarity_Legendary        VisualRarity = 5
)

// Enum value maps for VisualRarity.
var (
	VisualRarity_name = map[int32]string{
		0: "NoneVisualRarity",
		1: "Bronze",
		2: "Silver",
		3: "Gold",
		4: "Platinum",
		5: "Legendary",
	}
	VisualRarity_value = map[string]int32{
		"NoneVisualRarity": 0,
		"Bronze":           1,
		"Silver":           2,
		"Gold":             3,
		"Platinum":         4,
		"Legendary":        5,
	}
)

func (x VisualRarity) Enum() *VisualRarity {
	p := new(VisualRarity)
	*p = x
	return p
}

func (x VisualRarity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VisualRarity) Descriptor() protoreflect.EnumDescriptor {
	return file_cards_proto_enumTypes[1].Descriptor()
}

func (VisualRarity) Type() protoreflect.EnumType {
	return &file_cards_proto_enumTypes[1]
}

func (x VisualRarity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VisualRarity.Descriptor instead.
func (VisualRarity) EnumDescriptor() ([]byte, []int) {
	return file_cards_proto_rawDescGZIP(), []int{1}
}

type DeckType int32

const (
	DeckType_Premium DeckType = 0
	DeckType_Free    DeckType = 1
)

// Enum value maps for DeckType.
var (
	DeckType_name = map[int32]string{
		0: "Premium",
		1: "Free",
	}
	DeckType_value = map[string]int32{
		"Premium": 0,
		"Free":    1,
	}
)

func (x DeckType) Enum() *DeckType {
	p := new(DeckType)
	*p = x
	return p
}

func (x DeckType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeckType) Descriptor() protoreflect.EnumDescriptor {
	return file_cards_proto_enumTypes[2].Descriptor()
}

func (DeckType) Type() protoreflect.EnumType {
	return &file_cards_proto_enumTypes[2]
}

func (x DeckType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeckType.Descriptor instead.
func (DeckType) EnumDescriptor() ([]byte, []int) {
	return file_cards_proto_rawDescGZIP(), []int{2}
}

type Decks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Decks   map[string]*Deck `protobuf:"bytes,1,rep,name=Decks,proto3" json:"Decks,omitempty" yaml:"Decks,omitempty" bson:"decks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Active  string           `protobuf:"bytes,2,opt,name=Active,proto3" json:"Active,omitempty" yaml:"Active,omitempty" bson:"active,omitempty"`
	Defense string           `protobuf:"bytes,3,opt,name=Defense,proto3" json:"Defense,omitempty" yaml:"Defense,omitempty" bson:"defense,omitempty"`
}

func (x *Decks) Reset() {
	*x = Decks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cards_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Decks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Decks) ProtoMessage() {}

func (x *Decks) ProtoReflect() protoreflect.Message {
	mi := &file_cards_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Decks.ProtoReflect.Descriptor instead.
func (*Decks) Descriptor() ([]byte, []int) {
	return file_cards_proto_rawDescGZIP(), []int{0}
}

func (x *Decks) GetDecks() map[string]*Deck {
	if x != nil {
		return x.Decks
	}
	return nil
}

func (x *Decks) GetActive() string {
	if x != nil {
		return x.Active
	}
	return ""
}

func (x *Decks) GetDefense() string {
	if x != nil {
		return x.Defense
	}
	return ""
}

type Deck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       *base.ObjectID `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty" yaml:"ID,omitempty" bson:"_id,omitempty"`
	Name     string         `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty" yaml:"Name,omitempty" bson:"name,omitempty"`
	Picture  int32          `protobuf:"varint,3,opt,name=Picture,proto3" json:"Picture,omitempty" yaml:"Picture,omitempty" bson:"picture,omitempty"`
	Cards    []string       `protobuf:"bytes,4,rep,name=Cards,proto3" json:"Cards,omitempty" yaml:"Cards,omitempty" bson:"cards,omitempty"`
	DeckType DeckType       `protobuf:"varint,5,opt,name=DeckType,proto3,enum=cards.DeckType" json:"DeckType,omitempty" yaml:"DeckType,omitempty" bson:"deck_type,omitempty"`
}

func (x *Deck) Reset() {
	*x = Deck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cards_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck) ProtoMessage() {}

func (x *Deck) ProtoReflect() protoreflect.Message {
	mi := &file_cards_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck.ProtoReflect.Descriptor instead.
func (*Deck) Descriptor() ([]byte, []int) {
	return file_cards_proto_rawDescGZIP(), []int{1}
}

func (x *Deck) GetID() *base.ObjectID {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *Deck) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Deck) GetPicture() int32 {
	if x != nil {
		return x.Picture
	}
	return 0
}

func (x *Deck) GetCards() []string {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *Deck) GetDeckType() DeckType {
	if x != nil {
		return x.DeckType
	}
	return DeckType_Premium
}

type DecksChanges struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefenseDeckChanged bool     `protobuf:"varint,1,opt,name=DefenseDeckChanged,proto3" json:"DefenseDeckChanged,omitempty" yaml:"DefenseDeckChanged,omitempty" bson:"defense_deck_changed"`
	NewDefenseDeck     string   `protobuf:"bytes,2,opt,name=NewDefenseDeck,proto3" json:"NewDefenseDeck,omitempty" yaml:"NewDefenseDeck,omitempty" bson:"new_defense_deck,omitempty"`
	DeletedCards       []string `protobuf:"bytes,3,rep,name=DeletedCards,proto3" json:"DeletedCards,omitempty" yaml:"DeletedCards,omitempty" bson:"deleted_cards,omitempty"`
}

func (x *DecksChanges) Reset() {
	*x = DecksChanges{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cards_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecksChanges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecksChanges) ProtoMessage() {}

func (x *DecksChanges) ProtoReflect() protoreflect.Message {
	mi := &file_cards_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecksChanges.ProtoReflect.Descriptor instead.
func (*DecksChanges) Descriptor() ([]byte, []int) {
	return file_cards_proto_rawDescGZIP(), []int{2}
}

func (x *DecksChanges) GetDefenseDeckChanged() bool {
	if x != nil {
		return x.DefenseDeckChanged
	}
	return false
}

func (x *DecksChanges) GetNewDefenseDeck() string {
	if x != nil {
		return x.NewDefenseDeck
	}
	return ""
}

func (x *DecksChanges) GetDeletedCards() []string {
	if x != nil {
		return x.DeletedCards
	}
	return nil
}

type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArchetypeID string          `protobuf:"bytes,1,opt,name=ArchetypeID,proto3" json:"ArchetypeID,omitempty" yaml:"ArchetypeID,omitempty" bson:"archetype_id,omitempty"`
	Name        string          `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty" yaml:"Name,omitempty" bson:"name,omitempty"`
	Description string          `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty" yaml:"Description,omitempty" bson:"description,omitempty"`
	Image       string          `protobuf:"bytes,4,opt,name=Image,proto3" json:"Image,omitempty" yaml:"Image,omitempty" bson:"image,omitempty"`
	Properties  *CardProperties `protobuf:"bytes,5,opt,name=Properties,proto3" json:"Properties,omitempty" yaml:"Properties,omitempty" bson:"properties,omitempty"`
	Boosts      *Boosts         `protobuf:"bytes,6,opt,name=Boosts,proto3" json:"Boosts,omitempty" yaml:"Boosts,omitempty" bson:"boosts,omitempty"`
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cards_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_cards_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_cards_proto_rawDescGZIP(), []int{3}
}

func (x *Card) GetArchetypeID() string {
	if x != nil {
		return x.ArchetypeID
	}
	return ""
}

func (x *Card) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Card) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Card) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Card) GetProperties() *CardProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *Card) GetBoosts() *Boosts {
	if x != nil {
		return x.Boosts
	}
	return nil
}

type VirtualCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArchetypeID string    `protobuf:"bytes,1,opt,name=ArchetypeID,proto3" json:"ArchetypeID,omitempty" yaml:"ArchetypeID,omitempty" bson:"archetype_id,omitempty"`
	Upgradable  bool      `protobuf:"varint,2,opt,name=Upgradable,proto3" json:"Upgradable,omitempty" yaml:"Upgradable,omitempty" bson:"upgradable"`
	Options     []*Option `protobuf:"bytes,3,rep,name=Options,proto3" json:"Options,omitempty" yaml:"Options,omitempty" bson:"options,omitempty"`
}

func (x *VirtualCard) Reset() {
	*x = VirtualCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cards_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualCard) ProtoMessage() {}

func (x *VirtualCard) ProtoReflect() protoreflect.Message {
	mi := &file_cards_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualCard.ProtoReflect.Descriptor instead.
func (*VirtualCard) Descriptor() ([]byte, []int) {
	return file_cards_proto_rawDescGZIP(), []int{4}
}

func (x *VirtualCard) GetArchetypeID() string {
	if x != nil {
		return x.ArchetypeID
	}
	return ""
}

func (x *VirtualCard) GetUpgradable() bool {
	if x != nil {
		return x.Upgradable
	}
	return false
}

func (x *VirtualCard) GetOptions() []*Option {
	if x != nil {
		return x.Options
	}
	return nil
}

type Option struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemID string  `protobuf:"bytes,1,opt,name=ItemID,proto3" json:"ItemID,omitempty" yaml:"ItemID,omitempty" bson:"item_id,omitempty"`
	Price  float32 `protobuf:"fixed32,2,opt,name=Price,proto3" json:"Price,omitempty" yaml:"Price,omitempty" bson:"price,omitempty"`
}

func (x *Option) Reset() {
	*x = Option{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cards_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Option) ProtoMessage() {}

func (x *Option) ProtoReflect() protoreflect.Message {
	mi := &file_cards_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Option.ProtoReflect.Descriptor instead.
func (*Option) Descriptor() ([]byte, []int) {
	return file_cards_proto_rawDescGZIP(), []int{5}
}

func (x *Option) GetItemID() string {
	if x != nil {
		return x.ItemID
	}
	return ""
}

func (x *Option) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type CardProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CardEditionSet EditionSet = 1;
	// Pack Pack = 2;
	GameRarity   GameRarity   `protobuf:"varint,1,opt,name=GameRarity,proto3,enum=cards.GameRarity" json:"GameRarity,omitempty" yaml:"GameRarity,omitempty" bson:"game_rarity,omitempty"`
	VisualRarity VisualRarity `protobuf:"varint,2,opt,name=VisualRarity,proto3,enum=cards.VisualRarity" json:"VisualRarity,omitempty" yaml:"VisualRarity,omitempty" bson:"visual_rarity,omitempty"`
}

func (x *CardProperties) Reset() {
	*x = CardProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cards_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardProperties) ProtoMessage() {}

func (x *CardProperties) ProtoReflect() protoreflect.Message {
	mi := &file_cards_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardProperties.ProtoReflect.Descriptor instead.
func (*CardProperties) Descriptor() ([]byte, []int) {
	return file_cards_proto_rawDescGZIP(), []int{6}
}

func (x *CardProperties) GetGameRarity() GameRarity {
	if x != nil {
		return x.GameRarity
	}
	return GameRarity_NoneGameRarity
}

func (x *CardProperties) GetVisualRarity() VisualRarity {
	if x != nil {
		return x.VisualRarity
	}
	return VisualRarity_NoneVisualRarity
}

type Boosts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Influence  int32 `protobuf:"varint,1,opt,name=Influence,proto3" json:"Influence,omitempty" yaml:"Influence,omitempty" bson:"influence,omitempty"`   // Up
	Innovation int32 `protobuf:"varint,2,opt,name=Innovation,proto3" json:"Innovation,omitempty" yaml:"Innovation,omitempty" bson:"innovation,omitempty"` // Left
	DevSkills  int32 `protobuf:"varint,3,opt,name=DevSkills,proto3" json:"DevSkills,omitempty" yaml:"DevSkills,omitempty" bson:"dev_skills,omitempty"`   // Down
	Community  int32 `protobuf:"varint,4,opt,name=Community,proto3" json:"Community,omitempty" yaml:"Community,omitempty" bson:"community,omitempty"`   // Right
	TopWealth  int32 `protobuf:"varint,5,opt,name=TopWealth,proto3" json:"TopWealth,omitempty" yaml:"TopWealth,omitempty" bson:"top_wealth,omitempty"`   // Health
}

func (x *Boosts) Reset() {
	*x = Boosts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cards_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Boosts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Boosts) ProtoMessage() {}

func (x *Boosts) ProtoReflect() protoreflect.Message {
	mi := &file_cards_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Boosts.ProtoReflect.Descriptor instead.
func (*Boosts) Descriptor() ([]byte, []int) {
	return file_cards_proto_rawDescGZIP(), []int{7}
}

func (x *Boosts) GetInfluence() int32 {
	if x != nil {
		return x.Influence
	}
	return 0
}

func (x *Boosts) GetInnovation() int32 {
	if x != nil {
		return x.Innovation
	}
	return 0
}

func (x *Boosts) GetDevSkills() int32 {
	if x != nil {
		return x.DevSkills
	}
	return 0
}

func (x *Boosts) GetCommunity() int32 {
	if x != nil {
		return x.Community
	}
	return 0
}

func (x *Boosts) GetTopWealth() int32 {
	if x != nil {
		return x.TopWealth
	}
	return 0
}

var File_cards_proto protoreflect.FileDescriptor

var file_cards_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x63,
	0x61, 0x72, 0x64, 0x73, 0x1a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xaf, 0x01, 0x0a, 0x05, 0x44, 0x65, 0x63, 0x6b, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x44, 0x65,
	0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x73, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x44, 0x65, 0x63, 0x6b, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x1a, 0x45, 0x0a, 0x0a, 0x44,
	0x65, 0x63, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x61, 0x72,
	0x64, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x97, 0x01, 0x0a, 0x04, 0x44, 0x65, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12,
	0x2b, 0x0a, 0x08, 0x44, 0x65, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0f, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x08, 0x44, 0x65, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8a, 0x01, 0x0a,
	0x0c, 0x44, 0x65, 0x63, 0x6b, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x2e, 0x0a,
	0x12, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x44, 0x65, 0x66, 0x65, 0x6e,
	0x73, 0x65, 0x44, 0x65, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x26, 0x0a,
	0x0e, 0x4e, 0x65, 0x77, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x63, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4e, 0x65, 0x77, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x73,
	0x65, 0x44, 0x65, 0x63, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0xd2, 0x01, 0x0a, 0x04, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x72, 0x63, 0x68, 0x65, 0x74, 0x79, 0x70, 0x65, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x72, 0x63, 0x68, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x35, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x42, 0x6f, 0x6f, 0x73, 0x74,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x42, 0x6f, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x06, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x73, 0x22, 0x78,
	0x0a, 0x0b, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x41, 0x72, 0x63, 0x68, 0x65, 0x74, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x41, 0x72, 0x63, 0x68, 0x65, 0x74, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x27, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x36, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x22, 0x7c, 0x0a, 0x0e, 0x43, 0x61, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x0c, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x52,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x63, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x52, 0x0c, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x22, 0xa0,
	0x01, 0x0a, 0x06, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x66,
	0x6c, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x49, 0x6e,
	0x66, 0x6c, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x6e, 0x6f, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x49, 0x6e, 0x6e,
	0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x65, 0x76, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x44, 0x65, 0x76, 0x53,
	0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x70, 0x57, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x54, 0x6f, 0x70, 0x57, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x2a, 0x4e, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x12, 0x0a, 0x0e, 0x4e, 0x6f, 0x6e, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x61, 0x72, 0x69, 0x74,
	0x79, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x10, 0x01, 0x12,
	0x0c, 0x0a, 0x08, 0x55, 0x6e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x10, 0x02, 0x12, 0x08, 0x0a,
	0x04, 0x52, 0x61, 0x72, 0x65, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x70, 0x69, 0x63, 0x10,
	0x04, 0x2a, 0x63, 0x0a, 0x0c, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x52, 0x61, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x14, 0x0a, 0x10, 0x4e, 0x6f, 0x6e, 0x65, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x52,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x72, 0x6f, 0x6e, 0x7a,
	0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x10, 0x02, 0x12,
	0x08, 0x0a, 0x04, 0x47, 0x6f, 0x6c, 0x64, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x6c, 0x61,
	0x74, 0x69, 0x6e, 0x75, 0x6d, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x65, 0x67, 0x65, 0x6e,
	0x64, 0x61, 0x72, 0x79, 0x10, 0x05, 0x2a, 0x21, 0x0a, 0x08, 0x44, 0x65, 0x63, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x46, 0x72, 0x65, 0x65, 0x10, 0x01, 0x42, 0x34, 0x5a, 0x21, 0x6c, 0x6f, 0x63,
	0x67, 0x61, 0x6d, 0x65, 0x2d, 0x6d, 0x69, 0x6e, 0x69, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x64, 0x74, 0x6f, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x73, 0xaa, 0x02,
	0x0e, 0x4c, 0x6f, 0x43, 0x2e, 0x44, 0x54, 0x4f, 0x73, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cards_proto_rawDescOnce sync.Once
	file_cards_proto_rawDescData = file_cards_proto_rawDesc
)

func file_cards_proto_rawDescGZIP() []byte {
	file_cards_proto_rawDescOnce.Do(func() {
		file_cards_proto_rawDescData = protoimpl.X.CompressGZIP(file_cards_proto_rawDescData)
	})
	return file_cards_proto_rawDescData
}

var file_cards_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_cards_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_cards_proto_goTypes = []any{
	(GameRarity)(0),        // 0: cards.GameRarity
	(VisualRarity)(0),      // 1: cards.VisualRarity
	(DeckType)(0),          // 2: cards.DeckType
	(*Decks)(nil),          // 3: cards.Decks
	(*Deck)(nil),           // 4: cards.Deck
	(*DecksChanges)(nil),   // 5: cards.DecksChanges
	(*Card)(nil),           // 6: cards.Card
	(*VirtualCard)(nil),    // 7: cards.VirtualCard
	(*Option)(nil),         // 8: cards.Option
	(*CardProperties)(nil), // 9: cards.CardProperties
	(*Boosts)(nil),         // 10: cards.Boosts
	nil,                    // 11: cards.Decks.DecksEntry
	(*base.ObjectID)(nil),  // 12: base.ObjectID
}
var file_cards_proto_depIdxs = []int32{
	11, // 0: cards.Decks.Decks:type_name -> cards.Decks.DecksEntry
	12, // 1: cards.Deck.ID:type_name -> base.ObjectID
	2,  // 2: cards.Deck.DeckType:type_name -> cards.DeckType
	9,  // 3: cards.Card.Properties:type_name -> cards.CardProperties
	10, // 4: cards.Card.Boosts:type_name -> cards.Boosts
	8,  // 5: cards.VirtualCard.Options:type_name -> cards.Option
	0,  // 6: cards.CardProperties.GameRarity:type_name -> cards.GameRarity
	1,  // 7: cards.CardProperties.VisualRarity:type_name -> cards.VisualRarity
	4,  // 8: cards.Decks.DecksEntry.value:type_name -> cards.Deck
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_cards_proto_init() }
func file_cards_proto_init() {
	if File_cards_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cards_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Decks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cards_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Deck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cards_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*DecksChanges); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cards_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cards_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*VirtualCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cards_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Option); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cards_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CardProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cards_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Boosts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cards_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cards_proto_goTypes,
		DependencyIndexes: file_cards_proto_depIdxs,
		EnumInfos:         file_cards_proto_enumTypes,
		MessageInfos:      file_cards_proto_msgTypes,
	}.Build()
	File_cards_proto = out.File
	file_cards_proto_rawDesc = nil
	file_cards_proto_goTypes = nil
	file_cards_proto_depIdxs = nil
}
